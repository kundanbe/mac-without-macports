diff --git a/configure b/configure
old mode 100755
new mode 100644
index 5a6c2b5..597fc8e
--- a/configure
+++ b/configure
@@ -556,7 +556,7 @@ CFG_SXE=no
 CFG_PREFIX_INSTALL=yes
 CFG_SDK=
 D_FLAGS=
-I_FLAGS=
+I_FLAGS=-isystem/Applications/GNURadio.app/Contents/MacOS/usr/include
 L_FLAGS=
 RPATH_FLAGS=
 l_FLAGS=
@@ -2310,7 +2310,7 @@ if [ -z "${CFG_HOST_ARCH}" ]; then
                 fi
                 ;;
         esac
-        CFG_HOST_ARCH=macosx
+        CFG_HOST_ARCH=x86_64
         ;;
     AIX:*:00????????00)
         if [ "$OPT_VERBOSE" = "yes" ]; then
diff --git a/demos/mediaplayer/mediaplayer.cpp b/demos/mediaplayer/mediaplayer.cpp
index c367907..5b9fa10 100644
--- a/demos/mediaplayer/mediaplayer.cpp
+++ b/demos/mediaplayer/mediaplayer.cpp
@@ -237,7 +237,7 @@ MediaPlayer::MediaPlayer(const QString &filePath) :
 
     buttonPanelLayout->addWidget(sliderPanel);
     buttonPanelLayout->setContentsMargins(0, 0, 0, 0);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     layout->setSpacing(4);
     buttonPanelLayout->setSpacing(0);
     info->setMinimumHeight(100);
diff --git a/demos/qtdemo/colors.cpp b/demos/qtdemo/colors.cpp
index cf6a828..8311248 100644
--- a/demos/qtdemo/colors.cpp
+++ b/demos/qtdemo/colors.cpp
@@ -108,7 +108,7 @@ QFont Colors::contentFont()
 {
     QFont font;
     font.setStyleStrategy(QFont::PreferAntialias);
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     font.setPixelSize(14);
     font.setFamily("Arial");
 #else
@@ -132,7 +132,7 @@ QFont Colors::buttonFont()
 {
     QFont font;
     font.setStyleStrategy(QFont::PreferAntialias);
-#if 0//defined(Q_OS_MAC)
+#if 0//defined(Q_WS_MAC)
     font.setPixelSize(11);
     font.setFamily("Silom");
 #else
@@ -146,7 +146,7 @@ QFont Colors::tickerFont()
 {
     QFont font;
     font.setStyleStrategy(QFont::PreferAntialias);
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     font.setPixelSize(11);
     font.setBold(true);
     font.setFamily("Arial");
diff --git a/demos/qtdemo/menumanager.cpp b/demos/qtdemo/menumanager.cpp
index fc31168..2156b13 100644
--- a/demos/qtdemo/menumanager.cpp
+++ b/demos/qtdemo/menumanager.cpp
@@ -284,7 +284,7 @@ void MenuManager::showDocInAssistant(const QString &name)
     // Start assistant if it's not already running:
     if (this->assistantProcess.state() != QProcess::Running){
         QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
         app += QLatin1String("assistant");
 #else
         app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");
@@ -307,7 +307,7 @@ void MenuManager::showDocInAssistant(const QString &name)
 void MenuManager::launchExample(const QString &name)
 {
     QString executable = this->resolveExeFile(name);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (Colors::verbose)
         qDebug() << "Launching:" << executable;
     bool success = QDesktopServices::openUrl(QUrl::fromLocalFile(executable));
diff --git a/examples/dialogs/standarddialogs/dialog.cpp b/examples/dialogs/standarddialogs/dialog.cpp
index af4c313..5240c87 100644
--- a/examples/dialogs/standarddialogs/dialog.cpp
+++ b/examples/dialogs/standarddialogs/dialog.cpp
@@ -147,7 +147,7 @@ Dialog::Dialog(QWidget *parent)
     native->setText("Use native file dialog.");
     native->setChecked(true);
 #ifndef Q_WS_WIN
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
     native->hide();
 #endif
 #endif
diff --git a/examples/help/remotecontrol/remotecontrol.cpp b/examples/help/remotecontrol/remotecontrol.cpp
index 3d56e2c..c930ce8 100644
--- a/examples/help/remotecontrol/remotecontrol.cpp
+++ b/examples/help/remotecontrol/remotecontrol.cpp
@@ -87,7 +87,7 @@ void RemoteControl::on_launchButton_clicked()
         return;
 
     QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
     app += QLatin1String("assistant");
 #else
     app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");
diff --git a/examples/help/simpletextviewer/assistant.cpp b/examples/help/simpletextviewer/assistant.cpp
index 659a945..6361080 100644
--- a/examples/help/simpletextviewer/assistant.cpp
+++ b/examples/help/simpletextviewer/assistant.cpp
@@ -77,7 +77,7 @@ bool Assistant::startAssistant()
 
     if (proc->state() != QProcess::Running) {
         QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
         app += QLatin1String("assistant");
 #else
         app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");    
diff --git a/examples/tools/echoplugin/echowindow/echowindow.cpp b/examples/tools/echoplugin/echowindow/echowindow.cpp
index 0649635..93df6f3 100644
--- a/examples/tools/echoplugin/echowindow/echowindow.cpp
+++ b/examples/tools/echoplugin/echowindow/echowindow.cpp
@@ -92,7 +92,7 @@ bool EchoWindow::loadPlugin()
 #if defined(Q_OS_WIN)
     if (pluginsDir.dirName().toLower() == "debug" || pluginsDir.dirName().toLower() == "release")
         pluginsDir.cdUp();
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
     if (pluginsDir.dirName() == "MacOS") {
         pluginsDir.cdUp();
         pluginsDir.cdUp();
diff --git a/examples/tools/plugandpaint/mainwindow.cpp b/examples/tools/plugandpaint/mainwindow.cpp
index 6465f74..9b343b2 100644
--- a/examples/tools/plugandpaint/mainwindow.cpp
+++ b/examples/tools/plugandpaint/mainwindow.cpp
@@ -241,7 +241,7 @@ void MainWindow::loadPlugins()
 #if defined(Q_OS_WIN)
     if (pluginsDir.dirName().toLower() == "debug" || pluginsDir.dirName().toLower() == "release")
         pluginsDir.cdUp();
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
     if (pluginsDir.dirName() == "MacOS") {
         pluginsDir.cdUp();
         pluginsDir.cdUp();
diff --git a/mkspecs/darwin-g++/qmake.conf b/mkspecs/darwin-g++/qmake.conf
index 72baa89..f87a495 100644
--- a/mkspecs/darwin-g++/qmake.conf
+++ b/mkspecs/darwin-g++/qmake.conf
@@ -46,12 +46,12 @@ QMAKE_CXXFLAGS_THREAD	=
 
 QMAKE_INCDIR		=
 QMAKE_LIBDIR		=
-QMAKE_INCDIR_X11	= /usr/X11R6/include
-QMAKE_LIBDIR_X11	= /usr/X11R6/lib
+QMAKE_INCDIR_X11	= /opt/X11/include
+QMAKE_LIBDIR_X11	= /opt/X11/lib
 QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
 QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
-QMAKE_INCDIR_OPENGL	= /usr/X11R6/include
-QMAKE_LIBDIR_OPENGL	= /usr/X11R6/lib
+QMAKE_INCDIR_OPENGL	= /opt/X11/include
+QMAKE_LIBDIR_OPENGL	= /opt/X11/lib
 
 QMAKE_LINK		= c++
 QMAKE_LINK_SHLIB	= c++
@@ -59,11 +59,11 @@ QMAKE_LFLAGS		+= -headerpad_max_install_names
 QMAKE_LFLAGS		=
 QMAKE_LFLAGS_RELEASE	=
 QMAKE_LFLAGS_DEBUG	=
-QMAKE_LFLAGS_APP        = -prebind
-QMAKE_LFLAGS_SHLIB	= -prebind -dynamiclib -single_module
-QMAKE_LFLAGS_PLUGIN	= -prebind -bundle
+QMAKE_LFLAGS_APP        = 
+QMAKE_LFLAGS_SHLIB	=  -dynamiclib -single_module
+QMAKE_LFLAGS_PLUGIN	=  -bundle
 QMAKE_LFLAGS_THREAD	=
-QMAKE_LFLAGS_SONAME	+= -install_name$${LITERAL_WHITESPACE}
+QMAKE_LFLAGS_SONAME	+= -install_name$${LITERAL_WHITESPACE}$$[QT_INSTALL_LIBS]/
 
 QMAKE_LFLAGS_VERSION    = -current_version$${LITERAL_WHITESPACE}
 QMAKE_LFLAGS_COMPAT_VERSION = -compatibility_version$${LITERAL_WHITESPACE}
diff --git a/qmake/generators/mac/pbuilder_pbx.cpp b/qmake/generators/mac/pbuilder_pbx.cpp
index 60aff6f..cba857b 100644
--- a/qmake/generators/mac/pbuilder_pbx.cpp
+++ b/qmake/generators/mac/pbuilder_pbx.cpp
@@ -48,7 +48,7 @@
 #  include <sys/types.h>
 #  include <sys/stat.h>
 #endif
-#ifdef Q_OS_DARWIN
+#ifdef Q_WS_MAC
 #include <ApplicationServices/ApplicationServices.h>
 #include <private/qcore_mac_p.h>
 #endif
@@ -1683,7 +1683,7 @@ ProjectBuilderMakefileGenerator::pbuilderVersion() const
     } else {
         QString version, version_plist = project->first("QMAKE_PBUILDER_VERSION_PLIST");
         if(version_plist.isEmpty()) {
-#ifdef Q_OS_DARWIN
+#ifdef Q_WS_MAC
             ret = QLatin1String("34");
             QCFType<CFURLRef> cfurl;
             OSStatus err = LSFindApplicationForInfo(0, CFSTR("com.apple.Xcode"), 0, 0, &cfurl);
diff --git a/qmake/main.cpp b/qmake/main.cpp
index 228f9fa..d668a31 100644
--- a/qmake/main.cpp
+++ b/qmake/main.cpp
@@ -55,7 +55,7 @@ QT_BEGIN_NAMESPACE
 
 // for Borland, main is defined to qMain which breaks qmake
 #undef main
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #endif
 
 /* This is to work around lame implementation on Darwin. It has been noted that the getpwd(3) function
diff --git a/qmake/option.cpp b/qmake/option.cpp
index 0dfa75a..5856448 100644
--- a/qmake/option.cpp
+++ b/qmake/option.cpp
@@ -93,7 +93,7 @@ QString Option::user_template_prefix;
 QStringList Option::shellPath;
 #if defined(Q_OS_WIN32)
 Option::TARG_MODE Option::target_mode = Option::TARG_WIN_MODE;
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
 Option::TARG_MODE Option::target_mode = Option::TARG_MACX_MODE;
 #elif defined(Q_OS_QNX6)
 Option::TARG_MODE Option::target_mode = Option::TARG_QNX6_MODE;
diff --git a/src/3rdparty/webkit/WebKit/qt/Api/qwebpage.cpp b/src/3rdparty/webkit/WebKit/qt/Api/qwebpage.cpp
index 8fae9b8..4f6fcdc 100644
--- a/src/3rdparty/webkit/WebKit/qt/Api/qwebpage.cpp
+++ b/src/3rdparty/webkit/WebKit/qt/Api/qwebpage.cpp
@@ -2134,7 +2134,7 @@ QString QWebPage::userAgentForUrl(const QUrl& url) const
     "AIX"
 #elif defined Q_OS_WIN32
     "%2"
-#elif defined Q_OS_DARWIN
+#elif defined Q_WS_MAC
 #ifdef __i386__ || __x86_64__
     "Intel Mac OS X"
 #else
diff --git a/src/corelib/codecs/qiconvcodec.cpp b/src/corelib/codecs/qiconvcodec.cpp
index 523d4e3..43a5c1b 100644
--- a/src/corelib/codecs/qiconvcodec.cpp
+++ b/src/corelib/codecs/qiconvcodec.cpp
@@ -56,7 +56,7 @@
 #elif defined(Q_OS_AIX)
 #  define NO_BOM
 #  define UTF16 "UCS-2"
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
 #  define NO_BOM
 #  if Q_BYTE_ORDER == Q_BIG_ENDIAN
 #    define UTF16 "UTF-16BE"
@@ -67,7 +67,7 @@
 #  define UTF16 "UTF-16"
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #ifndef GNU_LIBICONV
 #define GNU_LIBICONV
 #endif
@@ -93,7 +93,7 @@ QIconvCodec::QIconvCodec()
         fprintf(stderr, "QIconvCodec::convertToUnicode: internal error, UTF-16 codec not found\n");
         utf16Codec = reinterpret_cast<QTextCodec *>(~0);
     }
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (ptr_iconv_open == 0) {
         QLibrary libiconv(QLatin1String("/usr/lib/libiconv"));
         libiconv.setLoadHints(QLibrary::ExportExternalSymbolsHint);
diff --git a/src/corelib/codecs/qiconvcodec_p.h b/src/corelib/codecs/qiconvcodec_p.h
index 60ad393..d1a1c2d 100644
--- a/src/corelib/codecs/qiconvcodec_p.h
+++ b/src/corelib/codecs/qiconvcodec_p.h
@@ -53,7 +53,7 @@
 
 #if defined(Q_OS_UNIX) && !defined(QT_NO_ICONV) && !defined(QT_BOOTSTRAPPED)
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 typedef void * iconv_t;
 #else
 #include <iconv.h>
diff --git a/src/corelib/global/qglobal.cpp b/src/corelib/global/qglobal.cpp
index d388f73..87733f2 100644
--- a/src/corelib/global/qglobal.cpp
+++ b/src/corelib/global/qglobal.cpp
@@ -1242,10 +1242,10 @@ bool qSharedBuild()
 */
 
 /*!
-    \macro Q_OS_DARWIN
+    \macro Q_WS_MAC
     \relates <QtGlobal>
 
-    Defined on Darwin OS (synonym for Q_OS_MAC).
+    Defined on Darwin OS (synonym for Q_WS_MAC).
 */
 
 /*!
@@ -1597,7 +1597,7 @@ static const unsigned int qt_one = 1;
 const int QSysInfo::ByteOrder = ((*((unsigned char *) &qt_one) == 0) ? BigEndian : LittleEndian);
 #endif
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 
 QT_BEGIN_INCLUDE_NAMESPACE
 #include "private/qcore_mac_p.h"
diff --git a/src/corelib/global/qglobal.h b/src/corelib/global/qglobal.h
index 6c75687..a0ddebd 100644
--- a/src/corelib/global/qglobal.h
+++ b/src/corelib/global/qglobal.h
@@ -287,7 +287,7 @@ namespace QT_NAMESPACE {}
 #       define MAC_OS_X_VERSION_10_5 MAC_OS_X_VERSION_10_4 + 1
 #  endif
 #  if (MAC_OS_X_VERSION_MAX_ALLOWED > MAC_OS_X_VERSION_10_5)
-#    error "This version of Mac OS X is unsupported"
+//#    error "This version of Mac OS X is unsupported"
 #  endif
 #endif
 
diff --git a/src/corelib/global/qlibraryinfo.cpp b/src/corelib/global/qlibraryinfo.cpp
index e24b673..d892833 100644
--- a/src/corelib/global/qlibraryinfo.cpp
+++ b/src/corelib/global/qlibraryinfo.cpp
@@ -50,7 +50,7 @@ QT_END_NAMESPACE
 # include "qcoreapplication.h"
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include "private/qcore_mac_p.h"
 #endif
 
@@ -114,7 +114,7 @@ QSettings *QLibraryInfoPrivate::findConfiguration()
         qtconfig = qmake_libraryInfoFile();
 #else
     if (!QFile::exists(qtconfig) && QCoreApplication::instance()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 	CFBundleRef bundleRef = CFBundleGetMainBundle();
         if (bundleRef) {
 	    QCFType<CFURLRef> urlRef = CFBundleCopyResourceURL(bundleRef,
@@ -429,7 +429,7 @@ QLibraryInfo::location(LibraryLocation loc)
             return QFileInfo(qmake_libraryInfoFile()).absolutePath();
 #else
             if (QCoreApplication::instance()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 	        CFBundleRef bundleRef = CFBundleGetMainBundle();
 		if (bundleRef) {
 		    QCFType<CFURLRef> urlRef = CFBundleCopyBundleURL(bundleRef);
diff --git a/src/corelib/global/qnamespace.h b/src/corelib/global/qnamespace.h
index 70ba847..a8dbde4 100644
--- a/src/corelib/global/qnamespace.h
+++ b/src/corelib/global/qnamespace.h
@@ -1007,7 +1007,7 @@ public:
     };
 
 #if defined(QT3_SUPPORT)
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
 #ifndef qdoc
     typedef int MacintoshVersion;
 
@@ -1034,7 +1034,7 @@ public:
         MV_PANTHER = QSysInfo::MV_PANTHER,
         MV_TIGER = QSysInfo::MV_TIGER
     };
-#endif // Q_OS_MAC
+#endif // Q_WS_MAC
 
 #if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
 #ifndef qdoc
diff --git a/src/corelib/io/qdir.cpp b/src/corelib/io/qdir.cpp
index f60451c..899ef46 100644
--- a/src/corelib/io/qdir.cpp
+++ b/src/corelib/io/qdir.cpp
@@ -1808,7 +1808,7 @@ QChar QDir::separator()
     return QLatin1Char('/');
 #elif defined (Q_FS_FAT) || defined(Q_WS_WIN)
     return QLatin1Char('\\');
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
     return QLatin1Char(':');
 #else
     return QLatin1Char('/');
diff --git a/src/corelib/io/qfile.cpp b/src/corelib/io/qfile.cpp
index 9ce3651..db94889 100644
--- a/src/corelib/io/qfile.cpp
+++ b/src/corelib/io/qfile.cpp
@@ -58,7 +58,7 @@ static const int QFILE_WRITEBUFFER_SIZE = 16384;
 
 static QByteArray locale_encode(const QString &f)
 {
-#ifndef Q_OS_DARWIN
+#ifndef Q_WS_MAC
     return f.toLocal8Bit();
 #else
     // Mac always expects UTF-8... and decomposed...
@@ -68,7 +68,7 @@ static QByteArray locale_encode(const QString &f)
 
 static QString locale_decode(const QByteArray &f)
 {
-#ifndef Q_OS_DARWIN
+#ifndef Q_WS_MAC
     return QString::fromLocal8Bit(f);
 #else
     // Mac always gives us UTF-8 and decomposed, we want that composed...
diff --git a/src/corelib/io/qfsfileengine_unix.cpp b/src/corelib/io/qfsfileengine_unix.cpp
index 3562013..71b2acf 100644
--- a/src/corelib/io/qfsfileengine_unix.cpp
+++ b/src/corelib/io/qfsfileengine_unix.cpp
@@ -54,7 +54,7 @@
 #include <stdlib.h>
 #include <limits.h>
 #include <errno.h>
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 # include <private/qcore_mac_p.h>
 #endif
 
@@ -403,7 +403,7 @@ bool QFSFileEngine::mkdir(const QString &name, bool createParentDirectories) con
         }
         return true;
     }
-#if defined(Q_OS_DARWIN)  // Mac X doesn't support trailing /'s
+#if defined(Q_WS_MAC)  // Mac X doesn't support trailing /'s
     if (dirName[dirName.length() - 1] == QLatin1Char('/'))
         dirName = dirName.left(dirName.length() - 1);
 #endif
@@ -530,7 +530,7 @@ bool QFSFileEnginePrivate::isSymlink() const
     return is_link;
 }
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 static bool _q_isMacHidden(const QString &path)
 {
     OSErr err = noErr;
@@ -613,7 +613,7 @@ QAbstractFileEngine::FileFlags QFSFileEngine::fileFlags(FileFlags type) const
             ret |= ExeOtherPerm;
     }
     if (type & TypesMask) {
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         bool foundAlias = false;
         {
             FSRef fref;
@@ -635,7 +635,7 @@ QAbstractFileEngine::FileFlags QFSFileEngine::fileFlags(FileFlags type) const
                 ret |= FileType;
             else if (exists && (d->st.st_mode & S_IFMT) == S_IFDIR)
                 ret |= DirectoryType;
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
             if((ret & DirectoryType) && (type & BundleType)) {
                 QCFType<CFURLRef> url = CFURLCreateWithFileSystemPath(0, QCFString(d->filePath),
                                                                       kCFURLPOSIXPathStyle, true);
@@ -651,7 +651,7 @@ QAbstractFileEngine::FileFlags QFSFileEngine::fileFlags(FileFlags type) const
         if (exists)
             ret |= ExistsFlag;
         if (fileName(BaseName)[0] == QLatin1Char('.')
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
             || _q_isMacHidden(d->filePath)
 #endif
         )
@@ -666,7 +666,7 @@ QString QFSFileEngine::fileName(FileName file) const
 {
     Q_D(const QFSFileEngine);
     if (file == BundleName) {
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         QCFType<CFURLRef> url = CFURLCreateWithFileSystemPath(0, QCFString(d->filePath),
                                                               kCFURLPOSIXPathStyle, true);
         if(CFDictionaryRef dict = CFBundleCopyInfoDictionaryForURL(url)) {
@@ -783,7 +783,7 @@ QString QFSFileEngine::fileName(FileName file) const
                 return ret;
             }
         }
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         {
             FSRef fref;
             if (FSPathMakeRef((const UInt8 *)QFile::encodeName(QDir::cleanPath(d->filePath)).data(), &fref, 0) == noErr) {
diff --git a/src/corelib/io/qprocess_unix.cpp b/src/corelib/io/qprocess_unix.cpp
index 39245ac..91fd6c9 100644
--- a/src/corelib/io/qprocess_unix.cpp
+++ b/src/corelib/io/qprocess_unix.cpp
@@ -81,7 +81,7 @@ QT_END_NAMESPACE
 #include "qprocess.h"
 #include "qprocess_p.h"
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <private/qcore_mac_p.h>
 #endif
 
@@ -532,7 +532,7 @@ static char **_q_dupEnvironment(const QStringList &environment, int *envc)
     // if LD_LIBRARY_PATH exists in the current environment, but
     // not in the environment list passed by the programmer, then
     // copy it over.
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     static const char libraryPath[] = "DYLD_LIBRARY_PATH";
 #else
     static const char libraryPath[] = "LD_LIBRARY_PATH";
@@ -571,7 +571,7 @@ inline pid_t qt_fork()
 #endif
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 Q_GLOBAL_STATIC(QMutex, cfbundleMutex);
 #endif
 
@@ -619,7 +619,7 @@ void QProcessPrivate::startProcess()
 
     // Encode the program name.
     QByteArray encodedProgramName = QFile::encodeName(program);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     // allow invoking of .app bundles on the Mac.
     QFileInfo fileInfo(QString::fromUtf8(encodedProgramName.constData()));
     if (encodedProgramName.endsWith(".app") && fileInfo.isDir()) {
@@ -647,7 +647,7 @@ void QProcessPrivate::startProcess()
     // Add every argument to the list
     for (int i = 0; i < arguments.count(); ++i) {
         QString arg = arguments.at(i);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         // Mac OS X uses UTF8 for exec, regardless of the system locale.
         argv[i + 1] = ::strdup(arg.toUtf8().constData());
 #else
@@ -1279,7 +1279,7 @@ bool QProcessPrivate::startDetached(const QString &program, const QStringList &a
 
             char **argv = new char *[arguments.size() + 2];
             for (int i = 0; i < arguments.size(); ++i) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                 argv[i + 1] = ::strdup(arguments.at(i).toUtf8().constData());
 #else
                 argv[i + 1] = ::strdup(arguments.at(i).toLocal8Bit().constData());
diff --git a/src/corelib/io/qsettings.cpp b/src/corelib/io/qsettings.cpp
index c267ee7..ae800b5 100644
--- a/src/corelib/io/qsettings.cpp
+++ b/src/corelib/io/qsettings.cpp
@@ -333,7 +333,7 @@ after_loop:
 
 // see also qsettings_win.cpp and qsettings_mac.cpp
 
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
 QSettingsPrivate *QSettingsPrivate::create(QSettings::Format format, QSettings::Scope scope,
                                            const QString &organization, const QString &application)
 {
@@ -960,7 +960,7 @@ void QConfFileSettingsPrivate::initFormat()
     extension = (format == QSettings::NativeFormat) ? QLatin1String(".conf") : QLatin1String(".ini");
     readFunc = 0;
     writeFunc = 0;
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     caseSensitivity = (format == QSettings::NativeFormat) ? Qt::CaseSensitive : Qt::CaseInsensitive;
 #else
     caseSensitivity = IniCaseSensitivity;
@@ -1127,7 +1127,7 @@ static QString getPath(QSettings::Format format, QSettings::Scope scope)
 
         pathHash->insert(pathHashKey(QSettings::IniFormat, QSettings::UserScope), userPath);
         pathHash->insert(pathHashKey(QSettings::IniFormat, QSettings::SystemScope), systemPath);
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
         pathHash->insert(pathHashKey(QSettings::NativeFormat, QSettings::UserScope), userPath);
         pathHash->insert(pathHashKey(QSettings::NativeFormat, QSettings::SystemScope), systemPath);
 #endif
@@ -1503,7 +1503,7 @@ void QConfFileSettingsPrivate::syncConfFile(int confFileNo)
             because they don't exist) are treated as empty files.
         */
         if (file.isReadable() && fileInfo.size() != 0) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             if (format == QSettings::NativeFormat) {
                 ok = readPlistFile(confFile->name, &confFile->originalKeys);
             } else
@@ -1549,7 +1549,7 @@ void QConfFileSettingsPrivate::syncConfFile(int confFileNo)
         ParsedSettingsMap mergedKeys = confFile->mergedKeyMap();
 
         if (file.isWritable()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             if (format == QSettings::NativeFormat) {
                 ok = writePlistFile(confFile->name, mergedKeys);
             } else
@@ -2667,7 +2667,7 @@ QSettings::QSettings(const QString &fileName, Format format, QObject *parent)
 */
 QSettings::QSettings(QObject *parent)
     : QObject(*QSettingsPrivate::create(globalDefaultFormat, UserScope,
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                                         QCoreApplication::organizationDomain().isEmpty()
                                             ? QCoreApplication::organizationName()
                                             : QCoreApplication::organizationDomain()
@@ -3309,7 +3309,7 @@ QSettings::Format QSettings::defaultFormat()
 void QSettings::setSystemIniPath(const QString &dir)
 {
     setPath(IniFormat, SystemScope, dir);
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
     setPath(NativeFormat, SystemScope, dir);
 #endif
 }
@@ -3323,7 +3323,7 @@ void QSettings::setSystemIniPath(const QString &dir)
 void QSettings::setUserIniPath(const QString &dir)
 {
     setPath(IniFormat, UserScope, dir);
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
     setPath(NativeFormat, UserScope, dir);
 #endif
 }
diff --git a/src/corelib/io/qsettings_p.h b/src/corelib/io/qsettings_p.h
index 7239e7c..e88081c 100644
--- a/src/corelib/io/qsettings_p.h
+++ b/src/corelib/io/qsettings_p.h
@@ -287,7 +287,7 @@ private:
     void initAccess();
     void syncConfFile(int confFileNo);
     bool writeIniFile(QIODevice &device, const ParsedSettingsMap &map);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     bool readPlistFile(const QString &fileName, ParsedSettingsMap *map) const;
     bool writePlistFile(const QString &fileName, const ParsedSettingsMap &map) const;
 #endif
diff --git a/src/corelib/kernel/qcoreapplication.cpp b/src/corelib/kernel/qcoreapplication.cpp
index 74d4ca2..bfe152f 100644
--- a/src/corelib/kernel/qcoreapplication.cpp
+++ b/src/corelib/kernel/qcoreapplication.cpp
@@ -69,7 +69,7 @@
 #  include "qeventdispatcher_win_p.h"
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include "qcore_mac_p.h"
 #endif
 
@@ -86,7 +86,7 @@ extern QString qAppFileName();
 #endif
 
 #if !defined(Q_OS_WIN)
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 QString QCoreApplicationPrivate::macMenuBarName()
 {
     QString bundleName;
@@ -99,7 +99,7 @@ QString QCoreApplicationPrivate::macMenuBarName()
 QString QCoreApplicationPrivate::appName() const
 {
     static QString applName;
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     applName = macMenuBarName();
 #endif
     if (applName.isEmpty() && argv[0]) {
diff --git a/src/corelib/kernel/qcoreapplication_p.h b/src/corelib/kernel/qcoreapplication_p.h
index 77c45b6..32563b9 100644
--- a/src/corelib/kernel/qcoreapplication_p.h
+++ b/src/corelib/kernel/qcoreapplication_p.h
@@ -78,7 +78,7 @@ public:
     static void removePostedTimerEvent(QObject *object, int timerId);
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     static QString macMenuBarName();
 #endif
 
diff --git a/src/corelib/plugin/qlibrary.cpp b/src/corelib/plugin/qlibrary.cpp
index ab02cda..b64ea1a 100644
--- a/src/corelib/plugin/qlibrary.cpp
+++ b/src/corelib/plugin/qlibrary.cpp
@@ -48,7 +48,7 @@
 #include <qmap.h>
 #include <qsettings.h>
 #include <qdatetime.h>
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include <private/qcore_mac_p.h>
 #endif
 #ifndef NO_ERRNO_H
@@ -68,7 +68,7 @@ QT_BEGIN_NAMESPACE
 #  define QLIBRARY_AS_DEBUG true
 #endif
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC)
 // We don't use separate debug and release libs on UNIX, so we want
 // to allow loading plugins, regardless of how they were built.
 #  define QT_NO_DEBUG_PLUGIN_CHECK
@@ -284,7 +284,7 @@ static bool qt_parse_pattern(const char *s, uint *version, bool *debug, QByteArr
 }
 #endif // QT_NO_PLUGIN_CHECK
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC) && !defined(QT_NO_PLUGIN_CHECK)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC) && !defined(QT_NO_PLUGIN_CHECK)
 
 #if defined(Q_OS_FREEBSD) || defined(Q_OS_LINUX)
 #  define USE_MMAP
@@ -409,7 +409,7 @@ static bool qt_unix_query(const QString &library, uint *version, bool *debug, QB
     return ret;
 }
 
-#endif // Q_OS_UNIX && !Q_OS_MAC && !defined(QT_NO_PLUGIN_CHECK)
+#endif // Q_OS_UNIX && !Q_WS_MAC && !defined(QT_NO_PLUGIN_CHECK)
 
 typedef QMap<QString, QLibraryPrivate*> LibraryMap;
 Q_GLOBAL_STATIC(LibraryMap, libraryMap)
@@ -515,7 +515,7 @@ bool QLibrary::isLibrary(const QString &fileName)
     if (completeSuffix.isEmpty())
         return false;
     QStringList suffixes = completeSuffix.split(QLatin1Char('.'));
-# if defined(Q_OS_DARWIN)
+# if defined(Q_WS_MAC)
 
     // On Mac, libs look like libmylib.1.0.0.dylib
     const QString lastSuffix = suffixes.at(suffixes.count() - 1);
@@ -603,7 +603,7 @@ bool QLibraryPrivate::isPlugin(QSettings *settings)
         key = reg.at(2).toLatin1();
         success = qt_version != 0;
     } else {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC)
         if (!pHnd) {
             // use unix shortcut to avoid loading the library
             success = qt_unix_query(fileName, &qt_version, &debug, &key, this);
diff --git a/src/corelib/plugin/qlibrary_unix.cpp b/src/corelib/plugin/qlibrary_unix.cpp
index 1db260b..9bbd6ba 100644
--- a/src/corelib/plugin/qlibrary_unix.cpp
+++ b/src/corelib/plugin/qlibrary_unix.cpp
@@ -44,7 +44,7 @@
 
 #ifndef QT_NO_LIBRARY
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include <private/qcore_mac_p.h>
 #endif
 
@@ -173,7 +173,7 @@ bool QLibraryPrivate::load_sys()
     } 
 #if !defined(Q_OS_CYGWIN)
     else {
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
         if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_4)
 #endif        
         dlFlags |= RTLD_LOCAL;
@@ -212,7 +212,7 @@ bool QLibraryPrivate::load_sys()
         }
     }
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (!pHnd) {
         if (CFBundleRef bundle = CFBundleGetBundleWithIdentifier(QCFString(fileName))) {
             QCFType<CFURLRef> url = CFBundleCopyExecutableURL(bundle);
@@ -242,7 +242,7 @@ bool QLibraryPrivate::unload_sys()
     return true;
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 Q_CORE_EXPORT void *qt_mac_resolve_sys(void *handle, const char *symbol)
 {
     return dlsym(handle, symbol);
diff --git a/src/corelib/thread/qthread.cpp b/src/corelib/thread/qthread.cpp
index 61a3670..7df38e5 100644
--- a/src/corelib/thread/qthread.cpp
+++ b/src/corelib/thread/qthread.cpp
@@ -59,7 +59,7 @@
 /*
 #  elif defined(Q_OS_HPUX)
 #   include <sys/pstat.h>
-#  elif defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD) || defined(Q_OS_MAC)
+#  elif defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD) || defined(Q_WS_MAC)
 #   include <sys/sysctl.h>
 #  endif
 #endif
diff --git a/src/corelib/thread/qthread_unix.cpp b/src/corelib/thread/qthread_unix.cpp
index 8fb9049..0df1c89 100644
--- a/src/corelib/thread/qthread_unix.cpp
+++ b/src/corelib/thread/qthread_unix.cpp
@@ -58,7 +58,7 @@
 #include <sys/sysctl.h>
 #endif
 
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
 # ifdef qDebug
 #   define old_qDebug qDebug
 #   undef qDebug
@@ -238,7 +238,7 @@ int QThread::idealThreadCount()
 {
     int cores = -1;
 
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     // Mac OS X
     cores = MPProcessorsScheduled();
 #elif defined(Q_OS_HPUX)
@@ -344,7 +344,7 @@ void QThread::start(Priority priority)
 
     d->priority = priority;
 
-#if defined(Q_OS_DARWIN) || !defined(Q_OS_OPENBSD) && defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING-0 >= 0)
+#if defined(Q_WS_MAC) || !defined(Q_OS_OPENBSD) && defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING-0 >= 0)
     switch (priority) {
     case InheritPriority:
         {
@@ -501,7 +501,7 @@ void QThread::setPriority(Priority priority)
 
     // copied from start() with a few modifications:
 
-#if defined(Q_OS_DARWIN) || !defined(Q_OS_OPENBSD) && defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING-0 >= 0)
+#if defined(Q_WS_MAC) || !defined(Q_OS_OPENBSD) && defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING-0 >= 0)
     int sched_policy;
     sched_param param;
 
diff --git a/src/corelib/tools/qdumper.cpp b/src/corelib/tools/qdumper.cpp
index caeefc1..6f46b80 100644
--- a/src/corelib/tools/qdumper.cpp
+++ b/src/corelib/tools/qdumper.cpp
@@ -477,7 +477,7 @@ static void qDumpQFileInfo(QDumper &d)
         S(d, "completeBaseName", info.completeBaseName());
         S(d, "completeSuffix", info.completeSuffix());
         S(d, "baseName", info.baseName());
-#ifdef Q_OS_MACX
+#ifdef Q_WS_MAC
         BL(d, "isBundle", info.isBundle());
         S(d, "bundleName", info.bundleName());
 #endif
diff --git a/src/corelib/tools/qiterator.h b/src/corelib/tools/qiterator.h
index 0c178e4..f772d96 100644
--- a/src/corelib/tools/qiterator.h
+++ b/src/corelib/tools/qiterator.h
@@ -38,15 +38,11 @@
 #ifndef QITERATOR_H
 #define QITERATOR_H
 
+#include <iterator>
 #include <QtCore/qglobal.h>
 
 QT_BEGIN_HEADER
 
-namespace std {
-    struct bidirectional_iterator_tag;
-    struct random_access_iterator_tag;
-}
-
 QT_BEGIN_NAMESPACE
 
 QT_MODULE(Core)
diff --git a/src/corelib/tools/qlist.h b/src/corelib/tools/qlist.h
index 8a94454..6d430d5 100644
--- a/src/corelib/tools/qlist.h
+++ b/src/corelib/tools/qlist.h
@@ -42,10 +42,8 @@
 #include <QtCore/qatomic.h>
 #include <QtCore/qalgorithms.h>
 
-#ifndef QT_NO_STL
 #include <iterator>
 #include <list>
-#endif
 
 #include <new>
 
diff --git a/src/corelib/tools/qlocale.cpp b/src/corelib/tools/qlocale.cpp
index 241ad90..c5d5cc9 100644
--- a/src/corelib/tools/qlocale.cpp
+++ b/src/corelib/tools/qlocale.cpp
@@ -60,7 +60,7 @@ QT_END_NAMESPACE
 #   include "qt_windows.h"
 #   include <time.h>
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 #   include "private/qcore_mac_p.h"
 #   include <CoreFoundation/CoreFoundation.h>
 #endif
@@ -937,7 +937,7 @@ static QString winIso3116CtryName(LCID id)
 }
 
 
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
 /******************************************************************************
 ** Wrappers for Mac locale system functions
 */
@@ -4555,7 +4555,7 @@ __RCSID("$NetBSD: strtod.c,v 1.26 1998/02/03 18:44:21 perry Exp $");
 /*
 #if defined(__m68k__)    || defined(__sparc__) || defined(__i386__) || \
      defined(__mips__)    || defined(__ns32k__) || defined(__alpha__) || \
-     defined(__powerpc__) || defined(Q_OS_WIN) || defined(Q_OS_DARWIN) || defined(Q_OS_MAC) || \
+     defined(__powerpc__) || defined(Q_OS_WIN) || defined(Q_WS_MAC) || defined(Q_WS_MAC) || \
      defined(mips) || defined(Q_OS_AIX) || defined(Q_OS_SOLARIS)
 #           define IEEE_BIG_OR_LITTLE_ENDIAN 1
 #endif
diff --git a/src/corelib/tools/qpoint.h b/src/corelib/tools/qpoint.h
index 2d44a61..c27548a 100644
--- a/src/corelib/tools/qpoint.h
+++ b/src/corelib/tools/qpoint.h
@@ -80,7 +80,7 @@ public:
 
 private:
     friend class QTransform;
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     int yp;
     int xp;
 #else
diff --git a/src/corelib/tools/qrect.h b/src/corelib/tools/qrect.h
index 0e2494a..ddfb1d7 100644
--- a/src/corelib/tools/qrect.h
+++ b/src/corelib/tools/qrect.h
@@ -168,7 +168,7 @@ private:
 #if defined(Q_WS_X11)
     friend void qt_setCoords(QRect *r, int xp1, int yp1, int xp2, int yp2);
 #endif
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     int y1;
     int x1;
     int y2;
diff --git a/src/corelib/tools/qstring.cpp b/src/corelib/tools/qstring.cpp
index 953daaa..00ca474 100644
--- a/src/corelib/tools/qstring.cpp
+++ b/src/corelib/tools/qstring.cpp
@@ -50,7 +50,7 @@
 #include "qhash.h"
 #include "qdebug.h"
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <private/qcore_mac_p.h>
 #endif
 
@@ -4217,7 +4217,7 @@ int QString::localeAwareCompare(const QString &other) const
     default:
         return 0;
     }
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
     // Use CFStringCompare for comparing strings on Mac. This makes Qt order
     // strings the same way as native applications do, and also respects
     // the "Order for sorted lists" setting in the International preferences
diff --git a/src/corelib/xml/qxmlstream.h b/src/corelib/xml/qxmlstream.h
index 998b013..c02887f 100644
--- a/src/corelib/xml/qxmlstream.h
+++ b/src/corelib/xml/qxmlstream.h
@@ -79,7 +79,7 @@ QT_MODULE(Core)
 // We are taking the optimist scenario here to avoid creating more
 // symbols to be supported.
 
-#if defined(Q_OS_MAC) || defined(Q_OS_AIX)
+#if defined(Q_WS_MAC) || defined(Q_OS_AIX)
 # if !defined QT_BUILD_XML_LIB
 #  define Q_XMLSTREAM_RENAME_SYMBOLS
 # endif
diff --git a/src/gui/dialogs/qfilesystemmodel.cpp b/src/gui/dialogs/qfilesystemmodel.cpp
index d945c77..048582f 100644
--- a/src/gui/dialogs/qfilesystemmodel.cpp
+++ b/src/gui/dialogs/qfilesystemmodel.cpp
@@ -678,7 +678,7 @@ QString QFileSystemModelPrivate::size(const QModelIndex &index) const
         return QString();
     const QFileSystemNode *n = node(index);
     if (n->isDir()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         return QLatin1String("--");
 #else
         return QLatin1String("");
@@ -860,7 +860,7 @@ QVariant QFileSystemModel::headerData(int section, Qt::Orientation orientation,
     case 1: returnValue = tr("Size");
             break;
     case 2: returnValue =
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                    tr("Kind", "Match OS X Finder");
 #else
                    tr("Type", "All other platforms");
@@ -1007,7 +1007,7 @@ public:
     {
         switch (sortColumn) {
         case 0: {
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
             // place directories before files
             bool left = l->isDir();
             bool right = r->isDir();
diff --git a/src/gui/dialogs/qprintdialog.h b/src/gui/dialogs/qprintdialog.h
index 7588ec0..1a00fce 100644
--- a/src/gui/dialogs/qprintdialog.h
+++ b/src/gui/dialogs/qprintdialog.h
@@ -101,7 +101,7 @@ public:
 private:
 #ifndef QTOPIA_PRINTDIALOG
     Q_PRIVATE_SLOT(d_func(), void _q_chbPrintLastFirstToggled(bool))
-#if defined (Q_OS_UNIX) && !defined (Q_OS_MAC)
+#if defined (Q_OS_UNIX) && !defined (Q_WS_MAC)
     Q_PRIVATE_SLOT(d_func(), void _q_collapseOrExpandDialog())
 #endif
 # if defined(Q_OS_UNIX) && !defined(QT_NO_MESSAGEBOX)
diff --git a/src/gui/itemviews/qdirmodel.cpp b/src/gui/itemviews/qdirmodel.cpp
index e345d61..db5120e 100644
--- a/src/gui/itemviews/qdirmodel.cpp
+++ b/src/gui/itemviews/qdirmodel.cpp
@@ -449,7 +449,7 @@ QVariant QDirModel::headerData(int section, Qt::Orientation orientation, int rol
         case 0: return tr("Name");
         case 1: return tr("Size");
         case 2: return
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                        tr("Kind", "Match OS X Finder");
 #else
                        tr("Type", "All other platforms");
@@ -1304,7 +1304,7 @@ QString QDirModelPrivate::size(const QModelIndex &index) const
 {
     const QDirNode *n = node(index);
     if (n->info.isDir()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         return QLatin1String("--");
 #else
         return QLatin1String("");
diff --git a/src/gui/itemviews/qfileiconprovider.cpp b/src/gui/itemviews/qfileiconprovider.cpp
index 47e23b2..9f752b7 100644
--- a/src/gui/itemviews/qfileiconprovider.cpp
+++ b/src/gui/itemviews/qfileiconprovider.cpp
@@ -422,7 +422,7 @@ QString QFileIconProvider::type(const QFileInfo &info) const
 
     if (info.isSymLink())
         return QApplication::translate("QFileDialog",
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                                        "Alias", "Mac OS X Finder"
 #else
                                        "Shortcut", "All other platforms"
diff --git a/src/gui/kernel/qapplication.h b/src/gui/kernel/qapplication.h
index ee5b9ab..84cc6aa 100644
--- a/src/gui/kernel/qapplication.h
+++ b/src/gui/kernel/qapplication.h
@@ -300,7 +300,7 @@ public:
 #if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
     static QT3_SUPPORT Qt::WindowsVersion winVersion() { return (Qt::WindowsVersion)QSysInfo::WindowsVersion; }
 #endif
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     static QT3_SUPPORT Qt::MacintoshVersion macVersion() { return (Qt::MacintoshVersion)QSysInfo::MacintoshVersion; }
 #endif
 #  ifndef QT_NO_CURSOR
diff --git a/src/gui/kernel/qapplication_p.h b/src/gui/kernel/qapplication_p.h
index 59374b0..07e6ff4 100644
--- a/src/gui/kernel/qapplication_p.h
+++ b/src/gui/kernel/qapplication_p.h
@@ -86,7 +86,7 @@ enum { QT_TABLET_NPACKETQSIZE = 128 };
 # ifdef Q_OS_WINCE
   extern DWORD qt_cever;
 # endif
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
 extern QSysInfo::MacVersion qt_macver;
 #endif
 #if defined(Q_WS_QWS)
diff --git a/src/gui/text/qfont.cpp b/src/gui/text/qfont.cpp
index 2990d78..3f9430e 100644
--- a/src/gui/text/qfont.cpp
+++ b/src/gui/text/qfont.cpp
@@ -2450,7 +2450,7 @@ bool QFontInfo::fixedPitch() const
 {
     QFontEngine *engine = d->engineForScript(QUnicodeTables::Common);
     Q_ASSERT(engine != 0);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (!engine->fontDef.fixedPitchComputed) {
         QChar ch[2] = { QLatin1Char('i'), QLatin1Char('m') };
         QGlyphLayout g[2];
diff --git a/src/gui/text/qfontdatabase.cpp b/src/gui/text/qfontdatabase.cpp
index 1fd705b..2354802 100644
--- a/src/gui/text/qfontdatabase.cpp
+++ b/src/gui/text/qfontdatabase.cpp
@@ -350,7 +350,7 @@ struct QtFontFamily
         writingSystemCheck(false),
         loaded(false),
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         fixedPitchComputed(false),
 #endif
         name(n), count(0), foundries(0)
@@ -376,7 +376,7 @@ struct QtFontFamily
     bool writingSystemCheck : 1;
     bool loaded : 1;
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
     bool fixedPitchComputed : 1;
 #endif
 #ifdef Q_WS_X11
@@ -403,7 +403,7 @@ struct QtFontFamily
     QtFontFoundry *foundry(const QString &f, bool = false);
 };
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 inline static void qt_mac_get_fixed_pitch(QtFontFamily *f)
 {
     if(f && !f->fixedPitchComputed) {
@@ -1111,7 +1111,7 @@ unsigned int bestFoundry(int script, unsigned int score, int styleStrategy,
         }
 #else
         if (pitch != '*') {
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
             qt_mac_get_fixed_pitch(const_cast<QtFontFamily*>(family));
 #endif
             if ((pitch == 'm' && !family->fixedPitch)
@@ -1560,7 +1560,7 @@ bool QFontDatabase::isFixedPitch(const QString &family,
     QT_PREPEND_NAMESPACE(load)(familyName);
 
     QtFontFamily *f = d->family(familyName);
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
     qt_mac_get_fixed_pitch(f);
 #endif
     return (f && f->fixedPitch);
diff --git a/src/gui/widgets/qdockwidget.cpp b/src/gui/widgets/qdockwidget.cpp
index 7ce9125..ae1637d 100644
--- a/src/gui/widgets/qdockwidget.cpp
+++ b/src/gui/widgets/qdockwidget.cpp
@@ -936,7 +936,7 @@ void QDockWidgetPrivate::nonClientAreaMouseEvent(QMouseEvent *event)
             if (state->nca) {
                 endDrag();
             }
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             else { // workaround for lack of mouse-grab on Mac
                 QMainWindowLayout *layout
                     = qobject_cast<QMainWindowLayout *>(q->parentWidget()->layout());
@@ -949,7 +949,7 @@ void QDockWidgetPrivate::nonClientAreaMouseEvent(QMouseEvent *event)
 #endif
             break;
         case QEvent::NonClientAreaMouseButtonRelease:
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                         if (state)
                                 endDrag();
 #endif
diff --git a/src/network/ssl/qsslsocket_openssl_symbols.cpp b/src/network/ssl/qsslsocket_openssl_symbols.cpp
index c13fff8..014c3e6 100644
--- a/src/network/ssl/qsslsocket_openssl_symbols.cpp
+++ b/src/network/ssl/qsslsocket_openssl_symbols.cpp
@@ -293,7 +293,7 @@ static bool libGreaterThan(const QString &lhs, const QString &rhs)
 static QStringList findAllLibSsl()
 {
     QStringList paths;
-#  ifdef Q_OS_DARWIN
+#  ifdef Q_WS_MAC
     paths = QString::fromLatin1(qgetenv("DYLD_LIBRARY_PATH"))
             .split(QLatin1Char(':'), QString::SkipEmptyParts);
 #  else
diff --git a/src/plugins/accessible/widgets/simplewidgets.cpp b/src/plugins/accessible/widgets/simplewidgets.cpp
index 39ef734..d431b0b 100644
--- a/src/plugins/accessible/widgets/simplewidgets.cpp
+++ b/src/plugins/accessible/widgets/simplewidgets.cpp
@@ -50,7 +50,7 @@
 #include <qstyle.h>
 #include <qstyleoption.h>
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <qfocusframe.h>
 #endif
 
diff --git a/src/qt3support/other/q3accel.cpp b/src/qt3support/other/q3accel.cpp
index 2ba9c32..17ad860 100644
--- a/src/qt3support/other/q3accel.cpp
+++ b/src/qt3support/other/q3accel.cpp
@@ -221,7 +221,7 @@ void Q_COMPAT_EXPORT qt_set_accel_auto_shortcuts(bool b) { qt_accel_no_shortcuts
     Returns true if the accel is in the current subwindow, else false.
 */
 bool Q3AccelManager::correctSubWindow(QWidget* w, Q3AccelPrivate* d) {
-#if !defined (Q_OS_MACX)
+#if !defined (Q_WS_MAC)
      if (!d->watch || !d->watch->isVisible() || !d->watch->isEnabled())
 #else
     if (!d->watch || (!d->watch->isVisible() && !d->watch->inherits("QMenuBar")) || !d->watch->isEnabled())
diff --git a/src/qt3support/other/q3polygonscanner.cpp b/src/qt3support/other/q3polygonscanner.cpp
index 24e78ce..4871e69 100644
--- a/src/qt3support/other/q3polygonscanner.cpp
+++ b/src/qt3support/other/q3polygonscanner.cpp
@@ -489,7 +489,7 @@ miInsertEdgeInET(EdgeTable *ET, EdgeTableEntry *ETE,
  */
 
 typedef struct {
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     int y, x;
 #else
     int x, y;
diff --git a/src/qt3support/other/q3process_unix.cpp b/src/qt3support/other/q3process_unix.cpp
index 024e645..36d64a3 100644
--- a/src/qt3support/other/q3process_unix.cpp
+++ b/src/qt3support/other/q3process_unix.cpp
@@ -720,7 +720,7 @@ bool Q3Process::start( QStringList *env )
 #endif
 	i++;
     }
-#ifdef Q_OS_MACX
+#ifdef Q_WS_MAC
     if(i) {
 	Q3CString arg_bundle = arglistQ[0];
 	QFileInfo fi(QString::fromUtf8(arg_bundle.constData()));
@@ -785,7 +785,7 @@ bool Q3Process::start( QStringList *env )
 	} else { // start process with environment settins as specified in env
 	    // construct the environment for exec
 	    int numEntries = env->count();
-#if defined(Q_OS_MACX)
+#if defined(Q_WS_MAC)
 	    QString ld_library_path(QLatin1String("DYLD_LIBRARY_PATH"));
 #else
 	    QString ld_library_path(QLatin1String("LD_LIBRARY_PATH"));
@@ -817,7 +817,7 @@ bool Q3Process::start( QStringList *env )
 		    QStringList pathList = QStringList::split( QLatin1Char(':'), QString::fromLocal8Bit(getenv( "PATH" )) );
 		    for (QStringList::Iterator it = pathList.begin(); it != pathList.end(); ++it ) {
 			QString dir = *it;
-#if defined(Q_OS_MACX) //look in a bundle
+#if defined(Q_WS_MAC) //look in a bundle
 			if(!QFile::exists(dir + QLatin1Char('/') + command) && QFile::exists(dir + QLatin1Char('/') + command + QLatin1String(".app")))
 			    dir += QLatin1Char('/') + command + QLatin1String(".app/Contents/MacOS");
 #endif
@@ -827,7 +827,7 @@ bool Q3Process::start( QStringList *env )
 			QFileInfo fileInfo( dir + "/" + command );
 #endif
 			if ( fileInfo.isExecutable() ) {
-#if defined(Q_OS_MACX)
+#if defined(Q_WS_MAC)
 			    arglistQ[0] = fileInfo.absFilePath().local8Bit();
 #else
 			    arglistQ[0] = fileInfo.filePath().local8Bit();
diff --git a/src/qt3support/text/q3textedit.cpp b/src/qt3support/text/q3textedit.cpp
index 27d504e..0fd6eb1 100644
--- a/src/qt3support/text/q3textedit.cpp
+++ b/src/qt3support/text/q3textedit.cpp
@@ -1348,7 +1348,7 @@ void Q3TextEdit::keyPressEvent(QKeyEvent *e)
             unsigned char ascii = e->text().length() ? e->text().unicode()->latin1() : 0;
             if (e->text().length() &&
                 ((!(e->state() & Qt::ControlButton) &&
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
                   !(e->state() & Qt::AltButton) &&
 #endif
                   !(e->state() & Qt::MetaButton)) ||
@@ -2423,7 +2423,7 @@ void Q3TextEdit::contentsMouseDoubleClickEvent(QMouseEvent * e)
     {
         Q3TextCursor c1 = *cursor;
         Q3TextCursor c2 = *cursor;
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
         Q3TextParagraph *para = cursor->paragraph();
         if (cursor->isValid()) {
             if (para->at(cursor->index())->c.isLetterOrNumber()) {
@@ -4977,7 +4977,7 @@ void Q3TextEdit::pasteSubType(const QByteArray& subtype, QMimeSource *m)
 #if defined(Q_OS_WIN32)
         // Need to convert CRLF to LF
         t.replace(QLatin1String("\r\n"), QLatin1String("\n"));
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
         //need to convert CR to LF
         t.replace(QLatin1Char('\r'), QLatin1Char('\n'));
 #endif
diff --git a/src/sql/drivers/odbc/qsql_odbc.h b/src/sql/drivers/odbc/qsql_odbc.h
index 9b5f504..9c4837d 100644
--- a/src/sql/drivers/odbc/qsql_odbc.h
+++ b/src/sql/drivers/odbc/qsql_odbc.h
@@ -45,7 +45,7 @@
 #include <QtCore/qt_windows.h>
 #endif
 
-#if defined (Q_OS_MAC) && (MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_3)
+#if defined (Q_WS_MAC) && (MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_3)
 // assume we use iodbc on MACX
 // comment next line out if you use a
 // unicode compatible manager
diff --git a/src/tools/uic/cpp/cppwriteinitialization.cpp b/src/tools/uic/cpp/cppwriteinitialization.cpp
index 834cdf7..a81c9bf 100644
--- a/src/tools/uic/cpp/cppwriteinitialization.cpp
+++ b/src/tools/uic/cpp/cppwriteinitialization.cpp
@@ -299,7 +299,7 @@ int IconHandle::compare(const IconHandle &rhs) const
 }
 
 
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
 inline uint qHash(const SizePolicyHandle &handle) { return qHash(handle.m_domSizePolicy); }
 inline uint qHash(const FontHandle &handle) { return qHash(handle.m_domFont); }
 inline uint qHash(const IconHandle &handle) { return qHash(handle.m_domIcon); }
@@ -401,7 +401,7 @@ void WriteInitialization::LayoutDefaultHandler::writeProperty(int p, const QStri
             bool ifndefMac = (!(m_state[p] & (HasDefaultFunction|HasDefaultValue))
                              && value == defaultStyleValue);
             if (ifndefMac)
-                str << "#ifndef Q_OS_MAC\n";
+                str << "#ifndef Q_WS_MAC\n";
             writeSetter(indent, objectName, setter, value, str);
             if (ifndefMac)
                 str << "#endif\n";
diff --git a/src/tools/uic/cpp/cppwriteinitialization.h b/src/tools/uic/cpp/cppwriteinitialization.h
index b116de1..1688ea0 100644
--- a/src/tools/uic/cpp/cppwriteinitialization.h
+++ b/src/tools/uic/cpp/cppwriteinitialization.h
@@ -63,7 +63,7 @@ namespace CPP {
         int compare(const FontHandle &) const;
     private:
         const DomFont *m_domFont;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const FontHandle &);
 #endif
     };
@@ -77,7 +77,7 @@ namespace CPP {
         int compare(const IconHandle &) const;
     private:
         const DomResourceIcon *m_domIcon;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const IconHandle &);
 #endif
     };
@@ -91,12 +91,12 @@ namespace CPP {
         int compare(const SizePolicyHandle &) const;
     private:
         const DomSizePolicy *m_domSizePolicy;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const SizePolicyHandle &);
 #endif
     };
     inline bool operator ==(const SizePolicyHandle &f1, const SizePolicyHandle &f2) { return f1.compare(f2) == 0; }
-#if !(defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3))
+#if !(defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3))
     inline bool operator  <(const SizePolicyHandle &f1, const SizePolicyHandle &f2) { return f1.compare(f2) < 0; }
 #endif
 
@@ -243,7 +243,7 @@ private:
     ColorBrushHash m_colorBrushHash;
     // Map from font properties to  font variable name for reuse
     // Map from size policy to  variable for reuse
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
     typedef QHash<FontHandle, QString> FontPropertiesNameMap;
     typedef QHash<IconHandle, QString> IconPropertiesNameMap;
     typedef QHash<SizePolicyHandle, QString> SizePolicyNameMap;
diff --git a/tools/assistant/compat/lib/qassistantclient.cpp b/tools/assistant/compat/lib/qassistantclient.cpp
index 3c4ae73..fefdb34 100644
--- a/tools/assistant/compat/lib/qassistantclient.cpp
+++ b/tools/assistant/compat/lib/qassistantclient.cpp
@@ -199,7 +199,7 @@ static QAssistantClientPrivate *data( const QAssistantClient *client, bool creat
 QAssistantClient::QAssistantClient( const QString &path, QObject *parent )
     : QObject( parent ), host ( QLatin1String("localhost") )
 {
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     const QString assistant = QLatin1String("Assistant_adp");
 #else
     const QString assistant = QLatin1String("assistant_adp");
@@ -215,7 +215,7 @@ QAssistantClient::QAssistantClient( const QString &path, QObject *parent )
             assistantCommand = path;
     }
 
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     assistantCommand += QLatin1String(".app/Contents/MacOS/Assistant_adp");
 #endif
 
diff --git a/tools/assistant/lib/qhelpsearchresultwidget.cpp b/tools/assistant/lib/qhelpsearchresultwidget.cpp
index 8111196..4f5f0e9 100644
--- a/tools/assistant/lib/qhelpsearchresultwidget.cpp
+++ b/tools/assistant/lib/qhelpsearchresultwidget.cpp
@@ -348,7 +348,7 @@ QHelpSearchResultWidget::QHelpSearchResultWidget(QHelpSearchEngine *engine)
 
 #if defined(QT_CLUCENE_SUPPORT)
     QHBoxLayout *hBoxLayout = new QHBoxLayout();
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
     hBoxLayout->setMargin(0);
     hBoxLayout->setSpacing(0);
 #endif
diff --git a/tools/assistant/tools/assistant/bookmarkmanager.cpp b/tools/assistant/tools/assistant/bookmarkmanager.cpp
index 039fbb8..61fbb85 100644
--- a/tools/assistant/tools/assistant/bookmarkmanager.cpp
+++ b/tools/assistant/tools/assistant/bookmarkmanager.cpp
@@ -442,7 +442,7 @@ void BookmarkWidget::setup()
     vlayout->addWidget(treeView);
 
     QString system = QLatin1String("win");
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     system = QLatin1String("mac");
 #endif
 
diff --git a/tools/assistant/tools/assistant/centralwidget.cpp b/tools/assistant/tools/assistant/centralwidget.cpp
index 159bb73..a5e02a7 100644
--- a/tools/assistant/tools/assistant/centralwidget.cpp
+++ b/tools/assistant/tools/assistant/centralwidget.cpp
@@ -84,7 +84,7 @@ FindWidget::FindWidget(QWidget *parent)
 {
     QString system = QLatin1String("win");
     QHBoxLayout *hboxLayout = new QHBoxLayout(this);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     system = QLatin1String("mac");
 #else
     hboxLayout->setSpacing(6);
@@ -174,7 +174,7 @@ CentralWidget::CentralWidget(QHelpEngine *engine, MainWindow *parent)
     QString system = QLatin1String("win");
     QVBoxLayout *vboxLayout = new QVBoxLayout(this);
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     system = QLatin1String("mac");
 #else
     vboxLayout->setMargin(0);
diff --git a/tools/assistant/tools/assistant/indexwindow.cpp b/tools/assistant/tools/assistant/indexwindow.cpp
index 70b70b5..14bbba1 100644
--- a/tools/assistant/tools/assistant/indexwindow.cpp
+++ b/tools/assistant/tools/assistant/indexwindow.cpp
@@ -150,7 +150,7 @@ bool IndexWindow::eventFilter(QObject *obj, QEvent *e)
             }
         }
     }
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     else if (obj == m_indexWidget && e->type() == QEvent::KeyPress) {
         QKeyEvent *ke = static_cast<QKeyEvent*>(e);
         if (ke->key() == Qt::Key_Return || ke->key() == Qt::Key_Enter)
diff --git a/tools/assistant/tools/assistant/mainwindow.cpp b/tools/assistant/tools/assistant/mainwindow.cpp
index ffa6138..0f86e82 100644
--- a/tools/assistant/tools/assistant/mainwindow.cpp
+++ b/tools/assistant/tools/assistant/mainwindow.cpp
@@ -369,7 +369,7 @@ void MainWindow::insertLastPages()
 void MainWindow::setupActions()
 {
     QString system = QLatin1String("win");
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     system = QLatin1String("mac");
     setUnifiedTitleAndToolBarOnMac(true);
 #endif
diff --git a/tools/designer/src/designer/assistantclient.cpp b/tools/designer/src/designer/assistantclient.cpp
index 29a9a7b..9902bee 100644
--- a/tools/designer/src/designer/assistantclient.cpp
+++ b/tools/designer/src/designer/assistantclient.cpp
@@ -108,7 +108,7 @@ bool AssistantClient::isRunning() const
 QString AssistantClient::binary()
 {
     QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
     app += QLatin1String("assistant");
 #else
     app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");    
diff --git a/tools/designer/src/designer/qdesigner_actions.cpp b/tools/designer/src/designer/qdesigner_actions.cpp
index aff3a80..799116d 100644
--- a/tools/designer/src/designer/qdesigner_actions.cpp
+++ b/tools/designer/src/designer/qdesigner_actions.cpp
@@ -271,7 +271,7 @@ QDesignerActions::QDesignerActions(QDesignerWorkbench *workbench)
     connect(m_saveFormAsAction, SIGNAL(triggered()), this, SLOT(saveFormAs()));
     m_fileActions->addAction(m_saveFormAsAction);
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     m_saveAllFormsAction->setShortcut(tr("ALT+CTRL+S"));
 #else
     m_saveAllFormsAction->setShortcut(tr("CTRL+SHIFT+S")); // Commonly "Save As" on Mac
diff --git a/tools/designer/src/lib/uilib/abstractformbuilder.cpp b/tools/designer/src/lib/uilib/abstractformbuilder.cpp
index 47f8efa..83d816c 100644
--- a/tools/designer/src/lib/uilib/abstractformbuilder.cpp
+++ b/tools/designer/src/lib/uilib/abstractformbuilder.cpp
@@ -602,7 +602,7 @@ void QAbstractFormBuilder::layoutInfo(DomLayout *ui_layout, QObject *parent, int
     if (const DomProperty *p = properties.value(strings.spacingProperty, 0))
         spac = p->elementNumber();
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     // here we recognize ui file < 4.3 (no we don't store margin property)
     if (mar != INT_MIN) {
         const int defaultMargin = parent->inherits("QLayoutWidget") ? 0 : 9;
diff --git a/tools/linguist/linguist/trwindow.cpp b/tools/linguist/linguist/trwindow.cpp
index 07f2f29..87a40e4 100644
--- a/tools/linguist/linguist/trwindow.cpp
+++ b/tools/linguist/linguist/trwindow.cpp
@@ -932,7 +932,7 @@ void TrWindow::manual()
 
     if (m_assistantProcess->state() != QProcess::Running) {
         QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
         app += QLatin1String("assistant");
 #else
         app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");
diff --git a/tools/linguist/shared/proparserutils.h b/tools/linguist/shared/proparserutils.h
index b1cab20..cc3403a 100644
--- a/tools/linguist/shared/proparserutils.h
+++ b/tools/linguist/shared/proparserutils.h
@@ -91,7 +91,7 @@ struct Option
 };
 #if defined(Q_OS_WIN32)
 Option::TARG_MODE Option::target_mode = Option::TARG_WIN_MODE;
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
 Option::TARG_MODE Option::target_mode = Option::TARG_MACX_MODE;
 #elif defined(Q_OS_QNX6)
 Option::TARG_MODE Option::target_mode = Option::TARG_QNX6_MODE;
index f9e12dc..f1e03b0 100644
Binary files a/tools/porting/src/qt3headers3.resource and b/tools/porting/src/qt3headers3.resource differ
diff --git a/tools/qvfb/qlock.cpp b/tools/qvfb/qlock.cpp
index a06cad6..ef2d7a4 100644
--- a/tools/qvfb/qlock.cpp
+++ b/tools/qvfb/qlock.cpp
@@ -42,11 +42,11 @@
 #include "qwssignalhandler_p.h"
 #include <unistd.h>
 #include <sys/types.h>
-#if defined(Q_OS_DARWIN)
+#if defined(Q_WS_MAC)
 #   define Q_NO_SEMAPHORE
 #   include <sys/stat.h>
 #   include <sys/file.h>
-#else // Q_OS_DARWIN
+#else // Q_WS_MAC
 #   include <sys/sem.h>
 #   if (defined(__GNU_LIBRARY__) && !defined(_SEM_SEMUN_UNDEFINED) && !defined(QT_LSB)) \
     || defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD) || defined(Q_OS_NETBSD) \
@@ -60,7 +60,7 @@ union semun {
     unsigned short *array;      /* array for GETALL, SETALL */
 };
 #   endif
-#endif // Q_OS_DARWIN
+#endif // Q_WS_MAC
 #include <sys/ipc.h>
 #include <string.h>
 #include <errno.h>
diff --git a/tools/shared/findwidget/findwidget.cpp b/tools/shared/findwidget/findwidget.cpp
index 316a024..dbd7d49 100644
--- a/tools/shared/findwidget/findwidget.cpp
+++ b/tools/shared/findwidget/findwidget.cpp
@@ -100,7 +100,7 @@ FindWidget::FindWidget(QWidget *parent)
     , m_textEdit(0)
 {
     QHBoxLayout *hboxLayout = new QHBoxLayout(this);
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
     hboxLayout->setSpacing(6);
     hboxLayout->setMargin(0);
 #endif
