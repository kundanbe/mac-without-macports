Configured with:

./configure \
  -prefix /Applications/GNURadio.app/Contents/MacOS/usr \
  -x11 \
  -release \
  -confirm-license \
  -opensource \
  -no-system-proxies \
  -no-qt3support \
  -no-xmlpatterns \
  -no-audio-backend \
  -no-phonon \
  -no-phonon-backend \
  -no-webkit \
  -no-javascript-jit \
  -no-script \
  -no-scripttools \
  -no-declarative \
  -graphicssystem opengl \
  -no-libmng \
  -nomake demos \
  -nomake examples \
  -no-multimedia \
  -no-gif \
  -no-libtiff \
  -no-nis \
  -no-openssl \
  -rpath \
  -no-dbus \
  -no-cups \
  -no-iconv \
  -no-pch \
  -arch x86_64 \
  -opengl

diff --git a/configure b/configure
index 10ad7ca..c8bbce7 100755
--- a/configure
+++ b/configure
@@ -273,6 +273,9 @@ if [ -d /System/Library/Frameworks/Carbon.framework ]; then
 else
     PLATFORM_MAC=no
 fi
+PLATFORM_X11=yes
+BUILD_ON_MAC=yes
+PLATFORM_MAC=no
 
 #-----------------------------------------------------------------------------
 # Qt version detection
@@ -896,7 +899,7 @@ CFG_SXE=no
 CFG_PREFIX_INSTALL=yes
 CFG_SDK=
 D_FLAGS=
-I_FLAGS=
+I_FLAGS=-I/Applications/GNURadio.app/Contents/MacOS/usr/include
 L_FLAGS=
 RPATH_FLAGS=
 l_FLAGS=
@@ -3194,7 +3197,7 @@ if [ -z "${CFG_HOST_ARCH}" ]; then
                 fi
                 ;;
         esac
-        CFG_HOST_ARCH=macosx
+        CFG_HOST_ARCH=x86_64
         ;;
     AIX:*:00????????00)
         if [ "$OPT_VERBOSE" = "yes" ]; then
@@ -5014,7 +5017,7 @@ if true; then ###[ '!' -f "$outpath/bin/qmake" ];
                 ;;
             *)
                 # For all other configurations require a minimum of 10.5
-                echo "export MACOSX_DEPLOYMENT_TARGET = 10.5" >> "$mkfile"
+                echo "export MACOSX_DEPLOYMENT_TARGET = 10.7" >> "$mkfile"
                 ;;
             esac
 
@@ -7230,7 +7233,7 @@ case "$PLATFORM,$CFG_MAC_COCOA" in
     ;;
 macx*,yes)
     # Cocoa
-    QMakeVar set QMAKE_MACOSX_DEPLOYMENT_TARGET 10.5
+    QMakeVar set QMAKE_MACOSX_DEPLOYMENT_TARGET 10.7
     ;;
 macx*,no)
     # gcc, Carbon
@@ -7998,16 +8001,16 @@ if [ "$PLATFORM_MAC" = "yes" ] && [ "$CFG_MAC_XARCH" != "no" ]; then
             QMakeVar add QMAKE_OBJECTIVE_CFLAGS_PPC "-arch ppc -Xarch_ppc -mmacosx-version-min=10.4"
         fi
         if echo "$CFG_MAC_ARCHS" | grep '\<x86_64\>' > /dev/null 2>&1; then
-            QMakeVar add QMAKE_CFLAGS "-Xarch_x86_64 -mmacosx-version-min=10.5"
-            QMakeVar add QMAKE_CXXFLAGS "-Xarch_x86_64 -mmacosx-version-min=10.5"
-            QMakeVar add QMAKE_LFLAGS "-Xarch_x86_64 -mmacosx-version-min=10.5"
-            QMakeVar add QMAKE_OBJECTIVE_CFLAGS_X86_64 "-arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.5"
+            QMakeVar add QMAKE_CFLAGS "-Xarch_x86_64 -mmacosx-version-min=10.7"
+            QMakeVar add QMAKE_CXXFLAGS "-Xarch_x86_64 -mmacosx-version-min=10.7"
+            QMakeVar add QMAKE_LFLAGS "-Xarch_x86_64 -mmacosx-version-min=10.7"
+            QMakeVar add QMAKE_OBJECTIVE_CFLAGS_X86_64 "-arch x86_64 -Xarch_x86_64 -mmacosx-version-min=10.7"
         fi
         if echo "$CFG_MAC_ARCHS" | grep '\<ppc64\>' > /dev/null 2>&1; then
-            QMakeVar add QMAKE_CFLAGS "-Xarch_ppc64 -mmacosx-version-min=10.5"
-            QMakeVar add QMAKE_CXXFLAGS "-Xarch_ppc64 -mmacosx-version-min=10.5"
-            QMakeVar add QMAKE_LFLAGS "-Xarch_ppc64 -mmacosx-version-min=10.5"
-            QMakeVar add QMAKE_OBJECTIVE_CFLAGS_PPC_64 "-arch ppc64 -Xarch_ppc64 -mmacosx-version-min=10.5"
+            QMakeVar add QMAKE_CFLAGS "-Xarch_ppc64 -mmacosx-version-min=10.7"
+            QMakeVar add QMAKE_CXXFLAGS "-Xarch_ppc64 -mmacosx-version-min=10.7"
+            QMakeVar add QMAKE_LFLAGS "-Xarch_ppc64 -mmacosx-version-min=10.7"
+            QMakeVar add QMAKE_OBJECTIVE_CFLAGS_PPC_64 "-arch ppc64 -Xarch_ppc64 -mmacosx-version-min=10.7"
         fi
         ;;
     esac
diff --git a/demos/qmediaplayer/mediaplayer.cpp b/demos/qmediaplayer/mediaplayer.cpp
index e143559..bd04ce4 100644
--- a/demos/qmediaplayer/mediaplayer.cpp
+++ b/demos/qmediaplayer/mediaplayer.cpp
@@ -248,7 +248,7 @@ MediaPlayer::MediaPlayer() :
 
     buttonPanelLayout->addWidget(sliderPanel);
     buttonPanelLayout->setContentsMargins(0, 0, 0, 0);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     layout->setSpacing(4);
     buttonPanelLayout->setSpacing(0);
     info->setMinimumHeight(100);
diff --git a/demos/qtdemo/colors.cpp b/demos/qtdemo/colors.cpp
index f7b9587..e8c0999 100644
--- a/demos/qtdemo/colors.cpp
+++ b/demos/qtdemo/colors.cpp
@@ -110,7 +110,7 @@ QFont Colors::contentFont()
 {
     QFont font;
     font.setStyleStrategy(QFont::PreferAntialias);
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     font.setPixelSize(14);
     font.setFamily("Arial");
 #else
@@ -134,7 +134,7 @@ QFont Colors::buttonFont()
 {
     QFont font;
     font.setStyleStrategy(QFont::PreferAntialias);
-#if 0//defined(Q_OS_MAC)
+#if 0//defined(Q_WS_MAC)
     font.setPixelSize(11);
     font.setFamily("Silom");
 #else
@@ -148,7 +148,7 @@ QFont Colors::tickerFont()
 {
     QFont font;
     font.setStyleStrategy(QFont::PreferAntialias);
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     font.setPixelSize(11);
     font.setBold(true);
     font.setFamily("Arial");
diff --git a/demos/qtdemo/menumanager.cpp b/demos/qtdemo/menumanager.cpp
index 97db992..37d65ae 100644
--- a/demos/qtdemo/menumanager.cpp
+++ b/demos/qtdemo/menumanager.cpp
@@ -296,7 +296,7 @@ void MenuManager::showDocInAssistant(const QString &name)
     // Start assistant if it's not already running:
     if (this->assistantProcess.state() != QProcess::Running){
         QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
         app += QLatin1String("assistant");
 #else
         app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");
@@ -319,7 +319,7 @@ void MenuManager::showDocInAssistant(const QString &name)
 void MenuManager::launchExample(const QString &name)
 {
     QString executable = this->resolveExeFile(name);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (Colors::verbose)
         qDebug() << "Launching:" << executable;
     bool success = QDesktopServices::openUrl(QUrl::fromLocalFile(executable));
@@ -534,7 +534,7 @@ QString MenuManager::resolveExeFile(const QString &name)
     const QFile winD(dir.path() + QLatin1String("/debug/") + fileName);
     if (winD.exists())
         return winD.fileName();
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
     // Mac frameworks
     const QFile mac(dir.path() + QLatin1Char('/') + fileName + QLatin1String(".app"));
     if (mac.exists())
diff --git a/examples/help/remotecontrol/remotecontrol.cpp b/examples/help/remotecontrol/remotecontrol.cpp
index e9b2b54..7fd00d0 100644
--- a/examples/help/remotecontrol/remotecontrol.cpp
+++ b/examples/help/remotecontrol/remotecontrol.cpp
@@ -90,7 +90,7 @@ void RemoteControl::on_launchButton_clicked()
         return;
 
     QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
     app += QLatin1String("assistant");
 #else
     app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");
diff --git a/examples/help/simpletextviewer/assistant.cpp b/examples/help/simpletextviewer/assistant.cpp
index 5823bb4..28800da 100644
--- a/examples/help/simpletextviewer/assistant.cpp
+++ b/examples/help/simpletextviewer/assistant.cpp
@@ -84,7 +84,7 @@ bool Assistant::startAssistant()
 
     if (proc->state() != QProcess::Running) {
         QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
         app += QLatin1String("assistant");
 #else
         app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");    
diff --git a/examples/tools/echoplugin/echowindow/echowindow.cpp b/examples/tools/echoplugin/echowindow/echowindow.cpp
index 8f77de2..ffeebcf 100644
--- a/examples/tools/echoplugin/echowindow/echowindow.cpp
+++ b/examples/tools/echoplugin/echowindow/echowindow.cpp
@@ -95,7 +95,7 @@ bool EchoWindow::loadPlugin()
 #if defined(Q_OS_WIN)
     if (pluginsDir.dirName().toLower() == "debug" || pluginsDir.dirName().toLower() == "release")
         pluginsDir.cdUp();
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
     if (pluginsDir.dirName() == "MacOS") {
         pluginsDir.cdUp();
         pluginsDir.cdUp();
diff --git a/examples/tools/plugandpaint/mainwindow.cpp b/examples/tools/plugandpaint/mainwindow.cpp
index 8e232fe..e42a972 100644
--- a/examples/tools/plugandpaint/mainwindow.cpp
+++ b/examples/tools/plugandpaint/mainwindow.cpp
@@ -244,7 +244,7 @@ void MainWindow::loadPlugins()
 #if defined(Q_OS_WIN)
     if (pluginsDir.dirName().toLower() == "debug" || pluginsDir.dirName().toLower() == "release")
         pluginsDir.cdUp();
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
     if (pluginsDir.dirName() == "MacOS") {
         pluginsDir.cdUp();
         pluginsDir.cdUp();
diff --git a/include/Qt/qxmlstream.h b/include/Qt/qxmlstream.h
index 19ae9c4..ee6e2ae 100644
--- a/include/Qt/qxmlstream.h
+++ b/include/Qt/qxmlstream.h
@@ -6,5 +6,5 @@
     #endif
 #endif
 
-#include "../QtCore/qxmlstream.h"
 #include "../QtXml/qxmlstream.h"
+#include "../QtCore/qxmlstream.h"
diff --git a/qmake/generators/mac/pbuilder_pbx.cpp b/qmake/generators/mac/pbuilder_pbx.cpp
index a66d8a6..1cf9825 100644
--- a/qmake/generators/mac/pbuilder_pbx.cpp
+++ b/qmake/generators/mac/pbuilder_pbx.cpp
@@ -52,7 +52,7 @@
 #  include <sys/types.h>
 #  include <sys/stat.h>
 #endif
-#ifdef Q_OS_DARWIN
+#ifdef Q_WS_MAC
 #include <ApplicationServices/ApplicationServices.h>
 #include <private/qcore_mac_p.h>
 #endif
@@ -1790,7 +1790,7 @@ ProjectBuilderMakefileGenerator::pbuilderVersion() const
     } else {
         QString version, version_plist = project->first("QMAKE_PBUILDER_VERSION_PLIST");
         if(version_plist.isEmpty()) {
-#ifdef Q_OS_DARWIN
+#ifdef Q_WS_MAC
             ret = QLatin1String("34");
             QCFType<CFURLRef> cfurl;
             // Check for XCode 4 first
diff --git a/qmake/generators/unix/unixmake.cpp b/qmake/generators/unix/unixmake.cpp
index 0f06b81..c9bba5c 100644
--- a/qmake/generators/unix/unixmake.cpp
+++ b/qmake/generators/unix/unixmake.cpp
@@ -493,6 +493,7 @@ UnixMakefileGenerator::findLibraries()
                     } else {
                         stub = opt.mid(2);
                     }
+/*
                 } else if(Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-F")) {
                     frameworkdirs.append(QMakeLocalFileName(opt.right(opt.length()-2)));
                 } else if(Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-framework")) {
@@ -506,6 +507,7 @@ UnixMakefileGenerator::findLibraries()
                     extn = "";
                     dir = "/System/Library/Frameworks/" + opt + ".framework/";
                     stub = opt;
+*/
                 }
             } else {
                 extn = dir = "";
diff --git a/qmake/main.cpp b/qmake/main.cpp
index 2758ca9..9b087ca 100644
--- a/qmake/main.cpp
+++ b/qmake/main.cpp
@@ -59,7 +59,7 @@ QT_BEGIN_NAMESPACE
 
 // for Borland, main is defined to qMain which breaks qmake
 #undef main
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #endif
 
 /* This is to work around lame implementation on Darwin. It has been noted that the getpwd(3) function
diff --git a/qmake/option.cpp b/qmake/option.cpp
index f289dc6..0206974 100644
--- a/qmake/option.cpp
+++ b/qmake/option.cpp
@@ -539,7 +539,7 @@ Option::init(int argc, char **argv)
 #endif
         }
     } else if (Option::qmake_mode == Option::QMAKE_GENERATE_PROJECT) {
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
         Option::host_mode = Option::HOST_MACX_MODE;
         Option::target_mode = Option::TARG_MACX_MODE;
 #elif defined(Q_OS_UNIX)
diff --git a/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.cpp b/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.cpp
index 078fe15..c0b305b 100644
--- a/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.cpp
+++ b/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebpage.cpp
@@ -3799,7 +3799,7 @@ QString QWebPage::userAgentForUrl(const QUrl&) const
         firstPartTemp += QString::fromLatin1("AIX");
 #elif defined Q_OS_WIN32
         firstPartTemp += windowsVersionForUAString();
-#elif defined Q_OS_DARWIN
+#elif defined Q_WS_MAC
 #if CPU(X86) || CPU(X86_64)
         firstPartTemp += QString::fromLatin1("Intel Mac OS X");
 #else
diff --git a/src/corelib/codecs/qiconvcodec.cpp b/src/corelib/codecs/qiconvcodec.cpp
index e53ffa1..dde4cf8 100644
--- a/src/corelib/codecs/qiconvcodec.cpp
+++ b/src/corelib/codecs/qiconvcodec.cpp
@@ -62,7 +62,7 @@
 #elif defined(Q_OS_AIX)
 #  define NO_BOM
 #  define UTF16 "UCS-2"
-#elif defined(Q_OS_FREEBSD) || defined(Q_OS_MAC)
+#elif defined(Q_OS_FREEBSD) || defined(Q_WS_MAC)
 #  define NO_BOM
 #  if Q_BYTE_ORDER == Q_BIG_ENDIAN
 #    define UTF16 "UTF-16BE"
@@ -73,7 +73,7 @@
 #  define UTF16 "UTF-16"
 #endif
 
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
 #ifndef GNU_LIBICONV
 #define GNU_LIBICONV
 #endif
@@ -101,7 +101,7 @@ QIconvCodec::QIconvCodec()
         fprintf(stderr, "QIconvCodec::convertToUnicode: internal error, UTF-16 codec not found\n");
         utf16Codec = reinterpret_cast<QTextCodec *>(~0);
     }
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     if (ptr_iconv_open == 0) {
         QLibrary libiconv(QLatin1String("/usr/lib/libiconv"));
         libiconv.setLoadHints(QLibrary::ExportExternalSymbolsHint);
diff --git a/src/corelib/codecs/qiconvcodec_p.h b/src/corelib/codecs/qiconvcodec_p.h
index 6e80190..0d20028 100644
--- a/src/corelib/codecs/qiconvcodec_p.h
+++ b/src/corelib/codecs/qiconvcodec_p.h
@@ -57,7 +57,7 @@
 
 #if defined(Q_OS_UNIX) && !defined(QT_NO_ICONV) && !defined(QT_BOOTSTRAPPED)
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 typedef void * iconv_t;
 #else
 #include <iconv.h>
diff --git a/src/corelib/global/qglobal.cpp b/src/corelib/global/qglobal.cpp
index 5b63952..020a955 100644
--- a/src/corelib/global/qglobal.cpp
+++ b/src/corelib/global/qglobal.cpp
@@ -76,7 +76,7 @@
 #  include <envLib.h>
 #endif
 
-#if defined(Q_OS_MACX) && !defined(Q_OS_IOS)
+#if defined(Q_WS_MACX) && !defined(Q_OS_IOS)
 #include <CoreServices/CoreServices.h>
 #endif
 
@@ -1298,10 +1298,10 @@ bool qSharedBuild()
 */
 
 /*!
-    \macro Q_OS_DARWIN
+    \macro Q_WS_MAC
     \relates <QtGlobal>
 
-    Defined on Darwin OS (synonym for Q_OS_MAC).
+    Defined on Darwin OS (synonym for Q_WS_MAC).
 */
 
 /*!
@@ -1641,7 +1641,7 @@ bool qSharedBuild()
 */
 
 /*!
-  \macro Q_OS_MAC
+  \macro Q_WS_MAC
   \relates <QtGlobal>
 
   Defined on MAC OS (synonym for Darwin).
@@ -2167,7 +2167,7 @@ void *qMemSet(void *dest, int c, size_t n) { return memset(dest, c, n); }
 
 static QtMsgHandler handler = 0;                // pointer to debug handler
 
-#if defined(Q_CC_MWERKS) && defined(Q_OS_MACX)
+#if defined(Q_CC_MWERKS) && defined(Q_WS_MACX)
 extern bool qt_is_gui_used;
 static void mac_default_handler(const char *msg)
 {
@@ -2179,7 +2179,7 @@ static void mac_default_handler(const char *msg)
         fprintf(stderr, msg);
     }
 }
-#endif // Q_CC_MWERKS && Q_OS_MACX
+#endif // Q_CC_MWERKS && Q_WS_MACX
 
 #if defined(QT_USE_SLOG2)
 #ifndef QT_LOG_CODE
@@ -2368,7 +2368,7 @@ void qt_message_output(QtMsgType msgType, const char *buf)
     if (handler) {
         (*handler)(msgType, buf);
     } else {
-#if defined(Q_CC_MWERKS) && defined(Q_OS_MACX)
+#if defined(Q_CC_MWERKS) && defined(Q_WS_MACX)
         mac_default_handler(buf);
 #elif defined(QT_USE_SLOG2)
         slog2_default_handler(msgType, buf);
diff --git a/src/corelib/global/qlibraryinfo.cpp b/src/corelib/global/qlibraryinfo.cpp
index df2c068..a96e95b 100644
--- a/src/corelib/global/qlibraryinfo.cpp
+++ b/src/corelib/global/qlibraryinfo.cpp
@@ -58,7 +58,7 @@ QT_END_NAMESPACE
 # include "qcoreapplication.h"
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include "private/qcore_mac_p.h"
 #endif
 
@@ -114,7 +114,7 @@ QSettings *QLibraryInfoPrivate::findConfiguration()
         qtconfig = qmake_libraryInfoFile();
 #else
     if (!QFile::exists(qtconfig) && QCoreApplication::instance()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 	CFBundleRef bundleRef = CFBundleGetMainBundle();
         if (bundleRef) {
 	    QCFType<CFURLRef> urlRef = CFBundleCopyResourceURL(bundleRef,
@@ -457,7 +457,7 @@ QLibraryInfo::location(LibraryLocation loc)
             baseDir = QFileInfo(qmake_libraryInfoFile()).absolutePath();
 #else
             if (QCoreApplication::instance()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                 CFBundleRef bundleRef = CFBundleGetMainBundle();
                 if (bundleRef) {
                     QCFType<CFURLRef> urlRef = CFBundleCopyBundleURL(bundleRef);
diff --git a/src/corelib/global/qnamespace.h b/src/corelib/global/qnamespace.h
index ca8216c..f7da516 100644
--- a/src/corelib/global/qnamespace.h
+++ b/src/corelib/global/qnamespace.h
@@ -1190,7 +1190,7 @@ public:
     };
 
 #if defined(QT3_SUPPORT)
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
 #ifndef qdoc
     typedef int MacintoshVersion;
 
@@ -1217,7 +1217,7 @@ public:
         MV_PANTHER = QSysInfo::MV_PANTHER,
         MV_TIGER = QSysInfo::MV_TIGER
     };
-#endif // Q_OS_MAC
+#endif // Q_WS_MAC
 
 #if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
 #ifndef qdoc
diff --git a/src/corelib/io/qdir.cpp b/src/corelib/io/qdir.cpp
index 3a089d1..540fd7e 100644
--- a/src/corelib/io/qdir.cpp
+++ b/src/corelib/io/qdir.cpp
@@ -1783,7 +1783,7 @@ QChar QDir::separator()
     return QLatin1Char('\\');
 #elif defined(Q_OS_UNIX)
     return QLatin1Char('/');
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
     return QLatin1Char(':');
 #else
     return QLatin1Char('/');
diff --git a/src/corelib/io/qfile.cpp b/src/corelib/io/qfile.cpp
index 5b877e1..f04e57d 100644
--- a/src/corelib/io/qfile.cpp
+++ b/src/corelib/io/qfile.cpp
@@ -63,7 +63,7 @@ static const int QFILE_WRITEBUFFER_SIZE = 16384;
 
 static QByteArray locale_encode(const QString &f)
 {
-#if defined(Q_OS_DARWIN)
+#if defined(Q_WS_MAC)
     // Mac always expects UTF-8... and decomposed...
     return f.normalized(QString::NormalizationForm_D).toUtf8();
 #elif defined(Q_OS_SYMBIAN)
@@ -75,7 +75,7 @@ static QByteArray locale_encode(const QString &f)
 
 static QString locale_decode(const QByteArray &f)
 {
-#if defined(Q_OS_DARWIN)
+#if defined(Q_WS_MAC)
     // Mac always gives us UTF-8 and decomposed, we want that composed...
     return QString::fromUtf8(f).normalized(QString::NormalizationForm_C);
 #elif defined(Q_OS_SYMBIAN)
diff --git a/src/corelib/io/qfilesystemengine_p.h b/src/corelib/io/qfilesystemengine_p.h
index 50544bb..a1b32d8 100644
--- a/src/corelib/io/qfilesystemengine_p.h
+++ b/src/corelib/io/qfilesystemengine_p.h
@@ -76,7 +76,7 @@ public:
     static QString resolveGroupName(uint groupId);
 #endif
 
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
     static QString bundleName(const QFileSystemEntry &entry);
 #else
     static QString bundleName(const QFileSystemEntry &entry) { Q_UNUSED(entry) return QString(); }
diff --git a/src/corelib/io/qfilesystemengine_unix.cpp b/src/corelib/io/qfilesystemengine_unix.cpp
index 4a9049b..20c5822 100644
--- a/src/corelib/io/qfilesystemengine_unix.cpp
+++ b/src/corelib/io/qfilesystemengine_unix.cpp
@@ -57,13 +57,13 @@
 # include <QtCore/private/qcore_mac_p.h>
 #endif
 
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
 # include <CoreFoundation/CFBundle.h>
 #endif
 
 QT_BEGIN_NAMESPACE
 
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
 static inline bool _q_isMacHidden(const char *nativePath)
 {
     OSErr err;
@@ -209,7 +209,7 @@ QFileSystemEntry QFileSystemEngine::getLinkTarget(const QFileSystemEntry &link,
             ret.chop(1);
         return QFileSystemEntry(ret);
     }
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
     {
         FSRef fref;
         if (FSPathMakeRef((const UInt8 *)QFile::encodeName(QDir::cleanPath(link.filePath())).data(), &fref, 0) == noErr) {
@@ -241,7 +241,7 @@ QFileSystemEntry QFileSystemEngine::canonicalName(const QFileSystemEntry &entry,
     return QFileSystemEntry(slowCanonicalized(absoluteName(entry).filePath()));
 #else
     char *ret = 0;
-# if defined(Q_OS_MAC) && !defined(Q_OS_IOS)
+# if defined(Q_WS_MAC) && !defined(Q_OS_IOS)
     // When using -mmacosx-version-min=10.4, we get the legacy realpath implementation,
     // which does not work properly with the realpath(X,0) form. See QTBUG-28282.
     if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_6) {
@@ -387,7 +387,7 @@ QString QFileSystemEngine::resolveGroupName(uint groupId)
     return QString();
 }
 
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
 //static
 QString QFileSystemEngine::bundleName(const QFileSystemEntry &entry)
 {
@@ -407,14 +407,14 @@ QString QFileSystemEngine::bundleName(const QFileSystemEntry &entry)
 bool QFileSystemEngine::fillMetaData(const QFileSystemEntry &entry, QFileSystemMetaData &data,
         QFileSystemMetaData::MetaDataFlags what)
 {
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
     if (what & QFileSystemMetaData::BundleType) {
         if (!data.hasFlags(QFileSystemMetaData::DirectoryType))
             what |= QFileSystemMetaData::DirectoryType;
     }
 #endif
 
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC) \
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC) \
         && MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5
     if (what & QFileSystemMetaData::HiddenAttribute) {
         // Mac OS >= 10.5: st_flags & UF_HIDDEN
@@ -481,7 +481,7 @@ bool QFileSystemEngine::fillMetaData(const QFileSystemEntry &entry, QFileSystemM
             | QFileSystemMetaData::ExistsAttribute;
     }
 
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
     if (what & QFileSystemMetaData::AliasType)
     {
         if (entryExists) {
@@ -527,7 +527,7 @@ bool QFileSystemEngine::fillMetaData(const QFileSystemEntry &entry, QFileSystemM
         data.knownFlagsMask |= QFileSystemMetaData::HiddenAttribute;
     }
 
-#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
+#if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_WS_MAC)
     if (what & QFileSystemMetaData::BundleType) {
         if (entryExists && isPackage(data, entry))
             data.entryFlags |= QFileSystemMetaData::BundleType;
diff --git a/src/corelib/io/qfsfileengine_unix.cpp b/src/corelib/io/qfsfileengine_unix.cpp
index ad6dfe8..52f41c9 100644
--- a/src/corelib/io/qfsfileengine_unix.cpp
+++ b/src/corelib/io/qfsfileengine_unix.cpp
@@ -63,7 +63,7 @@
 # include "private/qcore_symbian_p.h"
 #endif
 #include <errno.h>
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 # include <private/qcore_mac_p.h>
 #endif
 
diff --git a/src/corelib/io/qprocess_unix.cpp b/src/corelib/io/qprocess_unix.cpp
index e17d191..6e69fff 100644
--- a/src/corelib/io/qprocess_unix.cpp
+++ b/src/corelib/io/qprocess_unix.cpp
@@ -86,7 +86,7 @@ QT_END_NAMESPACE
 #include "qprocess_p.h"
 #include "private/qcore_unix_p.h"
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <private/qcore_mac_p.h>
 #endif
 
@@ -488,7 +488,7 @@ bool QProcessPrivate::createChannel(Channel &channel)
 }
 
 QT_BEGIN_INCLUDE_NAMESPACE
-#if defined(Q_OS_MAC) && !defined(Q_OS_IOS)
+#if defined(Q_WS_MAC) && !defined(Q_OS_IOS)
 # include <crt_externs.h>
 # define environ (*_NSGetEnviron())
 #else
@@ -524,7 +524,7 @@ static char **_q_dupEnvironment(const QProcessEnvironmentPrivate::Hash &environm
     // if LD_LIBRARY_PATH exists in the current environment, but
     // not in the environment list passed by the programmer, then
     // copy it over.
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     static const char libraryPath[] = "DYLD_LIBRARY_PATH";
 #else
     static const char libraryPath[] = "LD_LIBRARY_PATH";
@@ -555,7 +555,7 @@ static char **_q_dupEnvironment(const QProcessEnvironmentPrivate::Hash &environm
     return envp;
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 Q_GLOBAL_STATIC(QMutex, cfbundleMutex);
 #endif
 
@@ -603,7 +603,7 @@ void QProcessPrivate::startProcess()
 
     // Encode the program name.
     QByteArray encodedProgramName = QFile::encodeName(program);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     // allow invoking of .app bundles on the Mac.
     QFileInfo fileInfo(QString::fromUtf8(encodedProgramName.constData()));
     if (encodedProgramName.endsWith(".app") && fileInfo.isDir()) {
@@ -631,7 +631,7 @@ void QProcessPrivate::startProcess()
     // Add every argument to the list
     for (int i = 0; i < arguments.count(); ++i) {
         QString arg = arguments.at(i);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         // Mac OS X uses UTF8 for exec, regardless of the system locale.
         argv[i + 1] = ::strdup(arg.toUtf8().constData());
 #else
@@ -1401,7 +1401,7 @@ bool QProcessPrivate::startDetached(const QString &program, const QStringList &a
 
             char **argv = new char *[arguments.size() + 2];
             for (int i = 0; i < arguments.size(); ++i) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                 argv[i + 1] = ::strdup(arguments.at(i).toUtf8().constData());
 #else
                 argv[i + 1] = ::strdup(arguments.at(i).toLocal8Bit().constData());
diff --git a/src/corelib/io/qsettings.cpp b/src/corelib/io/qsettings.cpp
index a4750c5..a86ab72 100644
--- a/src/corelib/io/qsettings.cpp
+++ b/src/corelib/io/qsettings.cpp
@@ -362,7 +362,7 @@ after_loop:
 
 // see also qsettings_win.cpp and qsettings_mac.cpp
 
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
 QSettingsPrivate *QSettingsPrivate::create(QSettings::Format format, QSettings::Scope scope,
                                            const QString &organization, const QString &application)
 {
@@ -991,7 +991,7 @@ void QConfFileSettingsPrivate::initFormat()
     extension = (format == QSettings::NativeFormat) ? QLatin1String(".conf") : QLatin1String(".ini");
     readFunc = 0;
     writeFunc = 0;
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     caseSensitivity = (format == QSettings::NativeFormat) ? Qt::CaseSensitive : IniCaseSensitivity;
 #else
     caseSensitivity = IniCaseSensitivity;
@@ -1124,7 +1124,7 @@ static void initDefaultPaths(QMutexLocker *locker)
 
         pathHash->insert(pathHashKey(QSettings::IniFormat, QSettings::UserScope), userPath);
         pathHash->insert(pathHashKey(QSettings::IniFormat, QSettings::SystemScope), systemPath);
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
         pathHash->insert(pathHashKey(QSettings::NativeFormat, QSettings::UserScope), userPath);
         pathHash->insert(pathHashKey(QSettings::NativeFormat, QSettings::SystemScope), systemPath);
 #endif
@@ -1521,7 +1521,7 @@ void QConfFileSettingsPrivate::syncConfFile(int confFileNo)
             because they don't exist) are treated as empty files.
         */
         if (file.isReadable() && fileInfo.size() != 0) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             if (format == QSettings::NativeFormat) {
                 ok = readPlistFile(confFile->name, &confFile->originalKeys);
             } else
@@ -1567,7 +1567,7 @@ void QConfFileSettingsPrivate::syncConfFile(int confFileNo)
         ParsedSettingsMap mergedKeys = confFile->mergedKeyMap();
 
         if (file.isWritable()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             if (format == QSettings::NativeFormat) {
                 ok = writePlistFile(confFile->name, mergedKeys);
             } else
@@ -2784,7 +2784,7 @@ QSettings::QSettings(const QString &fileName, Format format, QObject *parent)
 */
 QSettings::QSettings(QObject *parent)
     : QObject(*QSettingsPrivate::create(globalDefaultFormat, UserScope,
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                                         QCoreApplication::organizationDomain().isEmpty()
                                             ? QCoreApplication::organizationName()
                                             : QCoreApplication::organizationDomain()
@@ -3485,7 +3485,7 @@ QSettings::Format QSettings::defaultFormat()
 void QSettings::setSystemIniPath(const QString &dir)
 {
     setPath(IniFormat, SystemScope, dir);
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
     setPath(NativeFormat, SystemScope, dir);
 #endif
 }
@@ -3499,7 +3499,7 @@ void QSettings::setSystemIniPath(const QString &dir)
 void QSettings::setUserIniPath(const QString &dir)
 {
     setPath(IniFormat, UserScope, dir);
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
     setPath(NativeFormat, UserScope, dir);
 #endif
 }
diff --git a/src/corelib/io/qsettings_p.h b/src/corelib/io/qsettings_p.h
index b7e63de..761a6d6 100644
--- a/src/corelib/io/qsettings_p.h
+++ b/src/corelib/io/qsettings_p.h
@@ -301,7 +301,7 @@ private:
     void initAccess();
     void syncConfFile(int confFileNo);
     bool writeIniFile(QIODevice &device, const ParsedSettingsMap &map);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     bool readPlistFile(const QString &fileName, ParsedSettingsMap *map) const;
     bool writePlistFile(const QString &fileName, const ParsedSettingsMap &map) const;
 #endif
diff --git a/src/corelib/kernel/qcoreapplication.cpp b/src/corelib/kernel/qcoreapplication.cpp
index 83956dd..86fbfb8 100644
--- a/src/corelib/kernel/qcoreapplication.cpp
+++ b/src/corelib/kernel/qcoreapplication.cpp
@@ -91,7 +91,7 @@
 #  include "qeventdispatcher_win_p.h"
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include "qcore_mac_p.h"
 #endif
 
@@ -192,7 +192,7 @@ bool QCoreApplicationPrivate::useQt3Support = true;
 #endif
 
 #if !defined(Q_OS_WIN)
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 QString QCoreApplicationPrivate::macMenuBarName()
 {
     QString bundleName;
@@ -207,7 +207,7 @@ QString QCoreApplicationPrivate::appName() const
     QMutexLocker locker(QMutexPool::globalInstanceGet(&applicationName));
 
     if (applicationName.isNull()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         applicationName = macMenuBarName();
 #endif
         if (applicationName.isEmpty() && argv[0]) {
@@ -890,7 +890,7 @@ void QCoreApplication::setAttribute(Qt::ApplicationAttribute attribute, bool on)
         QCoreApplicationPrivate::attribs |= 1 << attribute;
     else
         QCoreApplicationPrivate::attribs &= ~(1 << attribute);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     // Turn on the no native menubar here, since we used to
     // do this implicitly. We DO NOT flip it off if someone sets
     // it to false.
diff --git a/src/corelib/kernel/qcoreapplication_p.h b/src/corelib/kernel/qcoreapplication_p.h
index 0a168d6..cd8ce5f 100644
--- a/src/corelib/kernel/qcoreapplication_p.h
+++ b/src/corelib/kernel/qcoreapplication_p.h
@@ -95,7 +95,7 @@ public:
     static void removePostedTimerEvent(QObject *object, int timerId);
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     static QString macMenuBarName();
 #endif
 
diff --git a/src/corelib/plugin/qlibrary.cpp b/src/corelib/plugin/qlibrary.cpp
index da80c13..66c1137 100644
--- a/src/corelib/plugin/qlibrary.cpp
+++ b/src/corelib/plugin/qlibrary.cpp
@@ -53,7 +53,7 @@
 #include <qsettings.h>
 #include <qdatetime.h>
 #include <private/qcoreapplication_p.h>
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include <private/qcore_mac_p.h>
 #endif
 #ifndef NO_ERRNO_H
@@ -72,7 +72,7 @@ QT_BEGIN_NAMESPACE
 #  define QLIBRARY_AS_DEBUG true
 #endif
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC)
 // We don't use separate debug and release libs on UNIX, so we want
 // to allow loading plugins, regardless of how they were built.
 #  define QT_NO_DEBUG_PLUGIN_CHECK
@@ -296,7 +296,7 @@ static bool qt_parse_pattern(const char *s, uint *version, bool *debug, QByteArr
 }
 #endif // QT_NO_PLUGIN_CHECK
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC) && !defined(Q_OS_SYMBIAN) && !defined(QT_NO_PLUGIN_CHECK)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC) && !defined(Q_OS_SYMBIAN) && !defined(QT_NO_PLUGIN_CHECK)
 
 static long qt_find_pattern(const char *s, ulong s_len,
                              const char *pattern, ulong p_len)
@@ -407,7 +407,7 @@ static bool qt_unix_query(const QString &library, uint *version, bool *debug, QB
     return ret;
 }
 
-#endif // Q_OS_UNIX && !Q_OS_MAC && !defined(Q_OS_SYMBIAN) && !defined(QT_NO_PLUGIN_CHECK)
+#endif // Q_OS_UNIX && !Q_WS_MAC && !defined(Q_OS_SYMBIAN) && !defined(QT_NO_PLUGIN_CHECK)
 
 typedef QMap<QString, QLibraryPrivate*> LibraryMap;
 
@@ -563,7 +563,7 @@ bool QLibrary::isLibrary(const QString &fileName)
     if (completeSuffix.isEmpty())
         return false;
     QStringList suffixes = completeSuffix.split(QLatin1Char('.'));
-# if defined(Q_OS_DARWIN)
+# if defined(Q_WS_MAC)
 
     // On Mac, libs look like libmylib.1.0.0.dylib
     const QString lastSuffix = suffixes.at(suffixes.count() - 1);
@@ -671,7 +671,7 @@ bool QLibraryPrivate::isPlugin(QSettings *settings)
     QByteArray key;
     bool success = false;
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC)
     if (fileName.endsWith(QLatin1String(".debug"))) {
         // refuse to load a file that ends in .debug
         // these are the debug symbols from the libraries
@@ -724,7 +724,7 @@ bool QLibraryPrivate::isPlugin(QSettings *settings)
         key = reg.at(2).toLatin1();
         success = qt_version != 0;
     } else {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC) && !defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC) && !defined(Q_OS_SYMBIAN)
         if (!pHnd) {
             // use unix shortcut to avoid loading the library
             success = qt_unix_query(fileName, &qt_version, &debug, &key, this);
diff --git a/src/corelib/plugin/qlibrary_unix.cpp b/src/corelib/plugin/qlibrary_unix.cpp
index 90797a4..f0aa09d 100644
--- a/src/corelib/plugin/qlibrary_unix.cpp
+++ b/src/corelib/plugin/qlibrary_unix.cpp
@@ -48,7 +48,7 @@
 
 #ifndef QT_NO_LIBRARY
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include <private/qcore_mac_p.h>
 #endif
 
@@ -147,7 +147,7 @@ bool QLibraryPrivate::load_sys()
             suffixes << QLatin1String(".so");
         }
 #endif
-# ifdef Q_OS_MAC
+# ifdef Q_WS_MAC
         if (!fullVersion.isEmpty()) {
             suffixes << QString::fromLatin1(".%1.bundle").arg(fullVersion);
             suffixes << QString::fromLatin1(".%1.dylib").arg(fullVersion);
@@ -175,7 +175,7 @@ bool QLibraryPrivate::load_sys()
     }
 #if !defined(Q_OS_CYGWIN)
     else {
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
         if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_4)
 #endif
         dlFlags |= RTLD_LOCAL;
@@ -242,7 +242,7 @@ bool QLibraryPrivate::load_sys()
         }
     }
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (!pHnd) {
         QByteArray utf8Bundle = fileName.toUtf8();
         QCFType<CFURLRef> bundleUrl = CFURLCreateFromFileSystemRepresentation(NULL, reinterpret_cast<const UInt8*>(utf8Bundle.data()), utf8Bundle.length(), true);
@@ -283,7 +283,7 @@ bool QLibraryPrivate::unload_sys()
     return true;
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 Q_CORE_EXPORT void *qt_mac_resolve_sys(void *handle, const char *symbol)
 {
     return dlsym(handle, symbol);
diff --git a/src/corelib/thread/qthread.cpp b/src/corelib/thread/qthread.cpp
index 7271592..b287871 100644
--- a/src/corelib/thread/qthread.cpp
+++ b/src/corelib/thread/qthread.cpp
@@ -64,7 +64,7 @@
 /*
 #  elif defined(Q_OS_HPUX)
 #   include <sys/pstat.h>
-#  elif defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD) || defined(Q_OS_MAC)
+#  elif defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD) || defined(Q_WS_MAC)
 #   include <sys/sysctl.h>
 #  endif
 #endif
diff --git a/src/corelib/thread/qthread_unix.cpp b/src/corelib/thread/qthread_unix.cpp
index 810123f..2da6403 100644
--- a/src/corelib/thread/qthread_unix.cpp
+++ b/src/corelib/thread/qthread_unix.cpp
@@ -78,7 +78,7 @@
 #include <sys/pstat.h>
 #endif
 
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
 # ifdef qDebug
 #   define old_qDebug qDebug
 #   undef qDebug
@@ -103,7 +103,7 @@
 # define SCHED_IDLE    5
 #endif
 
-#if defined(Q_OS_DARWIN) || !defined(Q_OS_OPENBSD) && defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING-0 >= 0)
+#if defined(Q_WS_MAC) || !defined(Q_OS_OPENBSD) && defined(_POSIX_THREAD_PRIORITY_SCHEDULING) && (_POSIX_THREAD_PRIORITY_SCHEDULING-0 >= 0)
 #define QT_HAS_THREAD_PRIORITY_SCHEDULING
 #endif
 
@@ -294,13 +294,13 @@ void QThreadPrivate::createEventDispatcher(QThreadData *data)
 
 #ifndef QT_NO_THREAD
 
-#if (defined(Q_OS_LINUX) || (defined(Q_OS_MAC) && MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6) || defined(Q_OS_QNX))
+#if (defined(Q_OS_LINUX) || (defined(Q_WS_MAC) && MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6) || defined(Q_OS_QNX))
 static void setCurrentThreadName(pthread_t threadId, const char *name)
 {
 #  if defined(Q_OS_LINUX) && !defined(QT_LINUXBASE)
     Q_UNUSED(threadId);
     prctl(PR_SET_NAME, (unsigned long)name, 0, 0, 0);
-#  elif (defined(Q_OS_MAC) && MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6)
+#  elif (defined(Q_WS_MAC) && MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6)
     Q_UNUSED(threadId);
     if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_6)
         pthread_setname_np(name);
@@ -335,7 +335,7 @@ void *QThreadPrivate::start(void *arg)
     // ### TODO: allow the user to create a custom event dispatcher
     createEventDispatcher(data);
 
-#if (defined(Q_OS_LINUX) || (defined(Q_OS_MAC) && MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6) || defined(Q_OS_QNX))
+#if (defined(Q_OS_LINUX) || (defined(Q_WS_MAC) && MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6) || defined(Q_OS_QNX))
     // sets the name of the current thread.
     QString objectName = thr->objectName();
 
@@ -415,7 +415,7 @@ int QThread::idealThreadCount()
 {
     int cores = -1;
 
-#if defined(Q_OS_MAC) && !defined(Q_WS_QPA)
+#if defined(Q_WS_MAC) && !defined(Q_WS_QPA)
     // Mac OS X
     cores = MPProcessorsScheduled();
 #elif defined(Q_OS_HPUX)
diff --git a/src/corelib/tools/qlocale.cpp b/src/corelib/tools/qlocale.cpp
index 74317a6..70a4557 100644
--- a/src/corelib/tools/qlocale.cpp
+++ b/src/corelib/tools/qlocale.cpp
@@ -48,7 +48,7 @@ static QSystemLocale *QSystemLocale_globalSystemLocale();
 QT_END_NAMESPACE
 #endif
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 #   include "private/qcore_mac_p.h"
 #   include <CoreFoundation/CoreFoundation.h>
 #endif
diff --git a/src/corelib/tools/qpoint.h b/src/corelib/tools/qpoint.h
index 93923d7..31669d2 100644
--- a/src/corelib/tools/qpoint.h
+++ b/src/corelib/tools/qpoint.h
@@ -93,7 +93,7 @@ public:
 private:
     friend class QTransform;
     // ### Qt 5;  remove the ifdef and just have the same order on all platforms.
-#if defined(Q_OS_MAC) && !defined(Q_OS_IOS)
+#if defined(Q_WS_MAC) && !defined(Q_OS_IOS)
     int yp;
     int xp;
 #else
diff --git a/src/corelib/tools/qrect.h b/src/corelib/tools/qrect.h
index deb5cd1..edccb37 100644
--- a/src/corelib/tools/qrect.h
+++ b/src/corelib/tools/qrect.h
@@ -173,7 +173,7 @@ private:
     friend void qt_setCoords(QRect *r, int xp1, int yp1, int xp2, int yp2);
 #endif
     // ### Qt 5;  remove the ifdef and just have the same order on all platforms.
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     int y1;
     int x1;
     int y2;
diff --git a/src/corelib/tools/qstring.cpp b/src/corelib/tools/qstring.cpp
index 3b046ed..ad2b36d 100644
--- a/src/corelib/tools/qstring.cpp
+++ b/src/corelib/tools/qstring.cpp
@@ -59,7 +59,7 @@
 #include "qendian.h"
 #include "qmutex.h"
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <private/qcore_mac_p.h>
 #endif
 
@@ -4866,7 +4866,7 @@ int QString::localeAwareCompare_helper(const QChar *data1, int length1,
     default:
         return 0;
     }
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
     // Use CFStringCompare for comparing strings on Mac. This makes Qt order
     // strings the same way as native applications do, and also respects
     // the "Order for sorted lists" setting in the International preferences
diff --git a/src/corelib/xml/qxmlstream.h b/src/corelib/xml/qxmlstream.h
index 12076c9..a0ec065 100644
--- a/src/corelib/xml/qxmlstream.h
+++ b/src/corelib/xml/qxmlstream.h
@@ -85,7 +85,7 @@ QT_MODULE(Core)
 // We are taking the optimist scenario here to avoid creating more
 // symbols to be supported.
 
-#if defined(Q_OS_MAC32) || defined(Q_OS_AIX)
+#if defined(Q_WS_MAC32) || defined(Q_OS_AIX)
 # if !defined QT_BUILD_XML_LIB
 #  define Q_XMLSTREAM_RENAME_SYMBOLS
 # endif
diff --git a/src/gui/accessible/qaccessible_mac.mm b/src/gui/accessible/qaccessible_mac.mm
index 911a113..9812494 100644
--- a/src/gui/accessible/qaccessible_mac.mm
+++ b/src/gui/accessible/qaccessible_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include "qaccessible.h"
 
 #ifndef QT_NO_ACCESSIBILITY
@@ -2467,3 +2469,4 @@ static OSStatus accessibilityEventHandler(EventHandlerCallRef next_ref, EventRef
 QT_END_NAMESPACE
 
 #endif // QT_NO_ACCESSIBILITY
+#endif
diff --git a/src/gui/accessible/qaccessible_mac_cocoa.mm b/src/gui/accessible/qaccessible_mac_cocoa.mm
index ccc3633..be26a58 100644
--- a/src/gui/accessible/qaccessible_mac_cocoa.mm
+++ b/src/gui/accessible/qaccessible_mac_cocoa.mm
@@ -39,6 +39,7 @@
 **
 ****************************************************************************/
 
+#if Q_WS_MAC
 
 #include "qaccessible.h"
 #include "qaccessible_mac_p.h"
@@ -237,3 +238,4 @@ - (id)accessibilityAttributeValue:(NSString *)attribute
 
 #endif // QT_NO_ACCESSIBILITY
 
+#endif
diff --git a/src/gui/accessible/qaccessible_mac_p.h b/src/gui/accessible/qaccessible_mac_p.h
index dd8c8a5..5cae74d 100644
--- a/src/gui/accessible/qaccessible_mac_p.h
+++ b/src/gui/accessible/qaccessible_mac_p.h
@@ -60,6 +60,8 @@
 #include <qwidget.h>
 #include <qdebug.h>
 
+#ifdef Q_WS_MAC
+
 //#define Q_ACCESSIBLE_MAC_DEBUG
 
 QT_BEGIN_NAMESPACE
@@ -477,3 +479,4 @@ Q_AUTOTEST_EXPORT bool isItInteresting(const QAInterface &interface);
 QT_END_NAMESPACE
 
 #endif
+#endif
diff --git a/src/gui/dialogs/qfiledialog_mac.mm b/src/gui/dialogs/qfiledialog_mac.mm
index c51f6ad..335937d 100644
--- a/src/gui/dialogs/qfiledialog_mac.mm
+++ b/src/gui/dialogs/qfiledialog_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include "qfiledialog.h"
 
 #ifndef QT_NO_FILEDIALOG
@@ -1205,3 +1207,4 @@ - (void)createAccessory
 
 #endif // QT_NO_FILEDIALOG
 
+#endif
diff --git a/src/gui/dialogs/qfilesystemmodel.cpp b/src/gui/dialogs/qfilesystemmodel.cpp
index 3ec17fc..2f38f78 100644
--- a/src/gui/dialogs/qfilesystemmodel.cpp
+++ b/src/gui/dialogs/qfilesystemmodel.cpp
@@ -738,7 +738,7 @@ QString QFileSystemModelPrivate::size(const QModelIndex &index) const
         return QString();
     const QFileSystemNode *n = node(index);
     if (n->isDir()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         return QLatin1String("--");
 #else
         return QLatin1String("");
@@ -927,7 +927,7 @@ QVariant QFileSystemModel::headerData(int section, Qt::Orientation orientation,
     case 1: returnValue = tr("Size");
             break;
     case 2: returnValue =
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                    tr("Kind", "Match OS X Finder");
 #else
                    tr("Type", "All other platforms");
@@ -1074,7 +1074,7 @@ public:
     {
         switch (sortColumn) {
         case 0: {
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
             // place directories before files
             bool left = l->isDir();
             bool right = r->isDir();
diff --git a/src/gui/dialogs/qpagesetupdialog_mac.mm b/src/gui/dialogs/qpagesetupdialog_mac.mm
index 2c1164a..c059fe6 100644
--- a/src/gui/dialogs/qpagesetupdialog_mac.mm
+++ b/src/gui/dialogs/qpagesetupdialog_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include "qpagesetupdialog.h"
 
 #include <qhash.h>
@@ -313,3 +315,4 @@ static void pageSetupDialogSheetDoneCallback(PMPrintSession printSession, Window
 QT_END_NAMESPACE
 
 #endif /* QT_NO_PRINTDIALOG */
+#endif
diff --git a/src/gui/dialogs/qprintdialog.h b/src/gui/dialogs/qprintdialog.h
index 352c5f8..f6c62d6 100644
--- a/src/gui/dialogs/qprintdialog.h
+++ b/src/gui/dialogs/qprintdialog.h
@@ -143,10 +143,10 @@ Q_SIGNALS:
 private:
 #ifndef QTOPIA_PRINTDIALOG
     Q_PRIVATE_SLOT(d_func(), void _q_chbPrintLastFirstToggled(bool))
-#if defined (Q_OS_UNIX) && !defined (Q_OS_MAC)
+#if defined (Q_OS_UNIX) && !defined (Q_WS_MAC)
     Q_PRIVATE_SLOT(d_func(), void _q_collapseOrExpandDialog())
 #endif
-# if defined(Q_OS_UNIX) && !defined (Q_OS_MAC) && !defined(QT_NO_MESSAGEBOX)
+# if defined(Q_OS_UNIX) && !defined (Q_WS_MAC) && !defined(QT_NO_MESSAGEBOX)
     Q_PRIVATE_SLOT(d_func(), void _q_checkFields())
 # endif
 #else // QTOPIA_PRINTDIALOG
diff --git a/src/gui/dialogs/qprintdialog_mac.mm b/src/gui/dialogs/qprintdialog_mac.mm
index 9fc56d6..40bd9f3 100644
--- a/src/gui/dialogs/qprintdialog_mac.mm
+++ b/src/gui/dialogs/qprintdialog_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #ifndef QT_NO_PRINTDIALOG
 
 #include <private/qt_mac_p.h>
@@ -435,3 +437,4 @@ static bool warnIfNotNative(QPrinter *printer)
 #include "moc_qprintdialog.cpp"
 
 #endif // QT_NO_PRINTDIALOG
+#endif
diff --git a/src/gui/itemviews/qdirmodel.cpp b/src/gui/itemviews/qdirmodel.cpp
index b4d5ba9..9cbc8f6 100644
--- a/src/gui/itemviews/qdirmodel.cpp
+++ b/src/gui/itemviews/qdirmodel.cpp
@@ -438,7 +438,7 @@ QVariant QDirModel::headerData(int section, Qt::Orientation orientation, int rol
         case 0: return tr("Name");
         case 1: return tr("Size");
         case 2: return
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                        tr("Kind", "Match OS X Finder");
 #else
                        tr("Type", "All other platforms");
@@ -1312,7 +1312,7 @@ QString QDirModelPrivate::size(const QModelIndex &index) const
 {
     const QDirNode *n = node(index);
     if (n->info.isDir()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         return QLatin1String("--");
 #else
         return QLatin1String("");
diff --git a/src/gui/itemviews/qfileiconprovider.cpp b/src/gui/itemviews/qfileiconprovider.cpp
index d6a1440..5f12aab 100644
--- a/src/gui/itemviews/qfileiconprovider.cpp
+++ b/src/gui/itemviews/qfileiconprovider.cpp
@@ -499,7 +499,7 @@ QString QFileIconProvider::type(const QFileInfo &info) const
     // Nautilus  - "folder"
 
     if (info.isSymLink())
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
         return QApplication::translate("QFileDialog", "Alias", "Mac OS X Finder");
 #else
         return QApplication::translate("QFileDialog", "Shortcut", "All other platforms");
diff --git a/src/gui/kernel/qapplication.h b/src/gui/kernel/qapplication.h
index 9b366b5..1e5644c 100644
--- a/src/gui/kernel/qapplication.h
+++ b/src/gui/kernel/qapplication.h
@@ -346,7 +346,7 @@ public:
 #if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
     static QT3_SUPPORT Qt::WindowsVersion winVersion() { return (Qt::WindowsVersion)QSysInfo::WindowsVersion; }
 #endif
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     static QT3_SUPPORT Qt::MacintoshVersion macVersion() { return (Qt::MacintoshVersion)QSysInfo::MacintoshVersion; }
 #endif
 #  ifndef QT_NO_CURSOR
@@ -419,7 +419,8 @@ private:
     friend class QGestureManager;
 #endif
 
-#if defined(Q_WS_MAC) || defined(Q_WS_X11)
+//#if defined(Q_WS_MAC) || defined(Q_WS_X11)
+#if defined(Q_WS_MAC)
     Q_PRIVATE_SLOT(d_func(), void _q_alertTimeOut())
 #endif
 #if defined(QT_RX71_MULTITOUCH)
diff --git a/src/gui/kernel/qapplication_mac.mm b/src/gui/kernel/qapplication_mac.mm
index 2a0aad4..0ed9cff 100644
--- a/src/gui/kernel/qapplication_mac.mm
+++ b/src/gui/kernel/qapplication_mac.mm
@@ -73,6 +73,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include <Cocoa/Cocoa.h>
 
 #include "qapplication.h"
@@ -3173,3 +3175,5 @@ void onApplicationChangedActivation( bool activated )
 { }
 
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/kernel/qapplication_p.h b/src/gui/kernel/qapplication_p.h
index 62b7b57..7dfb013 100644
--- a/src/gui/kernel/qapplication_p.h
+++ b/src/gui/kernel/qapplication_p.h
@@ -106,7 +106,7 @@ enum { QT_TABLET_NPACKETQSIZE = 128 };
 # ifdef Q_OS_WINCE
   extern DWORD qt_cever;
 # endif
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
 extern QSysInfo::MacVersion qt_macver;
 #endif
 #if defined(Q_WS_QWS)
diff --git a/src/gui/kernel/qcursor_mac.mm b/src/gui/kernel/qcursor_mac.mm
index c8ccf75..afab2d7 100644
--- a/src/gui/kernel/qcursor_mac.mm
+++ b/src/gui/kernel/qcursor_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include <private/qcursor_p.h>
 #include <private/qpixmap_mac_p.h>
 #include <qapplication.h>
@@ -687,3 +689,5 @@ QMouseEvent me(QMouseEvent::MouseMove, widget->mapFromGlobal(QPoint(x, y)), Qt::
 }
 
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/kernel/qdnd_mac.mm b/src/gui/kernel/qdnd_mac.mm
index 54a979d..39f043b 100644
--- a/src/gui/kernel/qdnd_mac.mm
+++ b/src/gui/kernel/qdnd_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include "qapplication.h"
 #ifndef QT_NO_DRAGANDDROP
 #include "qbitmap.h"
@@ -751,3 +753,5 @@ QDropEvent de(q->mapFromGlobal(QPoint(mouse.h, mouse.v)), qtAllowed, dropdata,
 
 #endif // QT_NO_DRAGANDDROP
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/kernel/qeventdispatcher_mac.mm b/src/gui/kernel/qeventdispatcher_mac.mm
index 699010f..21920e5 100644
--- a/src/gui/kernel/qeventdispatcher_mac.mm
+++ b/src/gui/kernel/qeventdispatcher_mac.mm
@@ -73,6 +73,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include "qplatformdefs.h"
 #include "private/qt_mac_p.h"
 #include "qeventdispatcher_mac_p.h"
@@ -1199,3 +1201,4 @@ inline static void processPostedEvents(QEventDispatcherMacPrivate *const d, cons
 
 QT_END_NAMESPACE
 
+#endif
diff --git a/src/gui/kernel/qsound_mac.mm b/src/gui/kernel/qsound_mac.mm
index 7e972a5..86021f8 100644
--- a/src/gui/kernel/qsound_mac.mm
+++ b/src/gui/kernel/qsound_mac.mm
@@ -38,6 +38,9 @@
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
+
+#ifdef Q_WS_MAC
+
 #include <qapplication.h>
 #include "qsound.h"
 #include "qsound_p.h"
@@ -188,3 +191,5 @@ -(void)sound:(NSSound *)sound didFinishPlaying:(BOOL)finishedOk
 #include "qsound_mac.moc"
 
 #endif // QT_NO_SOUND
+
+#endif
diff --git a/src/gui/kernel/qt_cocoa_helpers_mac.mm b/src/gui/kernel/qt_cocoa_helpers_mac.mm
index def2930..b6f33d3 100644
--- a/src/gui/kernel/qt_cocoa_helpers_mac.mm
+++ b/src/gui/kernel/qt_cocoa_helpers_mac.mm
@@ -73,6 +73,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include <private/qcore_mac_p.h>
 #include <qaction.h>
 #include <qwidget.h>
@@ -1831,3 +1833,5 @@ void qt_mac_setNeedsDisplayInRect(QWidget *widget, QRegion region)
 #endif // QT_MAC_USE_COCOA
 
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/kernel/qt_x11_p.h b/src/gui/kernel/qt_x11_p.h
index c2cf0a2..e706dc1 100644
--- a/src/gui/kernel/qt_x11_p.h
+++ b/src/gui/kernel/qt_x11_p.h
@@ -248,7 +248,7 @@ typedef int (*PtrXSelectExtensionEvent)(Display *, Window, XEventClass *, int);
  * Instead, we disabled R6 input, and open the input method
  * immediately at application start.
  */
-#if !defined(QT_NO_XIM) && (XlibSpecificationRelease >= 6) && \
+#if 0 && !defined(QT_NO_XIM) && (XlibSpecificationRelease >= 6) && \
     !defined(Q_OS_SOLARIS)
 #define USE_X11R6_XIM
 
diff --git a/src/gui/kernel/qwidget_mac.mm b/src/gui/kernel/qwidget_mac.mm
index 5730020..f060bda 100644
--- a/src/gui/kernel/qwidget_mac.mm
+++ b/src/gui/kernel/qwidget_mac.mm
@@ -73,6 +73,8 @@
 **
 ****************************************************************************/
 
+#if Q_WS_MAC
+
 #include <private/qt_mac_p.h>
 #include <private/qeventdispatcher_mac_p.h>
 
@@ -5450,3 +5452,5 @@ inline QPaintEngineCleanupHandler() : engine(0) {}
 }
 
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/painting/qbackingstore.cpp b/src/gui/painting/qbackingstore.cpp
index c7377f1..1c889dd 100644
--- a/src/gui/painting/qbackingstore.cpp
+++ b/src/gui/painting/qbackingstore.cpp
@@ -286,7 +286,8 @@ bool QWidgetBackingStore::bltRect(const QRect &rect, int dx, int dy, QWidget *wi
 void QWidgetBackingStore::releaseBuffer()
 {
     if (windowSurface)
-#if defined(Q_WS_QPA)
+//#if defined(Q_WS_QPA)
+#if 0
         windowSurface->resize(QSize());
 #else
         windowSurface->setGeometry(QRect());
@@ -420,7 +421,8 @@ QRegion QWidgetBackingStore::dirtyRegion(QWidget *widget) const
 {
     const bool widgetDirty = widget && widget != tlw;
     const QRect tlwRect(topLevelRect());
-#if defined(Q_WS_QPA)
+//#if defined(Q_WS_QPA)
+#if 0
     const QRect surfaceGeometry(tlwRect.topLeft(), windowSurface->size());
 #else
     const QRect surfaceGeometry(windowSurface->geometry());
@@ -475,7 +477,8 @@ QRegion QWidgetBackingStore::dirtyRegion(QWidget *widget) const
 QRegion QWidgetBackingStore::staticContents(QWidget *parent, const QRect &withinClipRect) const
 {
     if (!parent && tlw->testAttribute(Qt::WA_StaticContents)) {
-#if defined(Q_WS_QPA)
+//#if defined(Q_WS_QPA)
+#if 0
         const QSize surfaceGeometry(windowSurface->size());
 #else
         const QRect surfaceGeometry(windowSurface->geometry());
@@ -1188,7 +1191,8 @@ void QWidgetBackingStore::sync()
 
     const bool inTopLevelResize = tlwExtra->inTopLevelResize;
     const QRect tlwRect(topLevelRect());
-#ifdef  Q_WS_QPA
+//#ifdef  Q_WS_QPA
+#if 0
     const QRect surfaceGeometry(tlwRect.topLeft(), windowSurface->size());
 #else
     const QRect surfaceGeometry(windowSurface->geometry());
@@ -1212,7 +1216,8 @@ void QWidgetBackingStore::sync()
         }
     }
 
-#ifdef Q_WS_QPA
+//#ifdef Q_WS_QPA
+#if 0
     if (inTopLevelResize || surfaceGeometry.size() != tlwRect.size())
         windowSurface->resize(tlwRect.size());
 #else
diff --git a/src/gui/painting/qprintengine_mac.mm b/src/gui/painting/qprintengine_mac.mm
index 475a9ff..cef6179 100644
--- a/src/gui/painting/qprintengine_mac.mm
+++ b/src/gui/painting/qprintengine_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include <private/qprintengine_mac_p.h>
 #include <qthread.h>
 #include <quuid.h>
@@ -935,3 +937,5 @@ static inline int qt_get_PDMHeight(PMPageFormat pformat, bool fullPage,
 QT_END_NAMESPACE
 
 #endif // QT_NO_PRINTER
+
+#endif
diff --git a/src/gui/painting/qwindowsurface.cpp b/src/gui/painting/qwindowsurface.cpp
index 0ba0814..7811428 100644
--- a/src/gui/painting/qwindowsurface.cpp
+++ b/src/gui/painting/qwindowsurface.cpp
@@ -56,7 +56,8 @@ public:
     }
 
     QWidget *window;
-#if !defined(Q_WS_QPA)
+//#if !defined(Q_WS_QPA)
+#if 1
     QRect geometry;
 #else
     QSize size;
@@ -153,7 +154,8 @@ void QWindowSurface::endPaint(const QRegion &)
     d_ptr->bufferImages.clear();
 }
 
-#if !defined(Q_WS_QPA)
+//#if !defined(Q_WS_QPA)
+#if 1
 /*!
     Sets the currently allocated area to be the given \a rect.
 
diff --git a/src/gui/painting/qwindowsurface_p.h b/src/gui/painting/qwindowsurface_p.h
index 5d00ab7..9fc1855 100644
--- a/src/gui/painting/qwindowsurface_p.h
+++ b/src/gui/painting/qwindowsurface_p.h
@@ -88,7 +88,8 @@ public:
     // can be larger than just the offset from the top-level widget as there may also be window
     // decorations which are painted into the window surface.
     virtual void flush(QWidget *widget, const QRegion &region, const QPoint &offset) = 0;
-#if !defined(Q_WS_QPA)
+//#if !defined(Q_WS_QPA)
+#if 1
     virtual void setGeometry(const QRect &rect);
     QRect geometry() const;
 #else
diff --git a/src/gui/text/qfont.cpp b/src/gui/text/qfont.cpp
index 2bc55f5..c23da99 100644
--- a/src/gui/text/qfont.cpp
+++ b/src/gui/text/qfont.cpp
@@ -2697,7 +2697,7 @@ bool QFontInfo::fixedPitch() const
 {
     QFontEngine *engine = d->engineForScript(QUnicodeTables::Common);
     Q_ASSERT(engine != 0);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (!engine->fontDef.fixedPitchComputed) {
         QChar ch[2] = { QLatin1Char('i'), QLatin1Char('m') };
         QGlyphLayoutArray<2> g;
diff --git a/src/gui/text/qfontdatabase.cpp b/src/gui/text/qfontdatabase.cpp
index 4c2ace4..422bb69 100644
--- a/src/gui/text/qfontdatabase.cpp
+++ b/src/gui/text/qfontdatabase.cpp
@@ -410,7 +410,7 @@ struct  QtFontFamily
         writingSystemCheck(false),
         loaded(false),
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         fixedPitchComputed(false),
 #endif
         name(n), count(0), foundries(0)
@@ -439,7 +439,7 @@ struct  QtFontFamily
     bool writingSystemCheck : 1;
     bool loaded : 1;
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
     bool fixedPitchComputed : 1;
 #endif
 #ifdef Q_WS_X11
@@ -469,7 +469,7 @@ struct  QtFontFamily
     QtFontFoundry *foundry(const QString &f, bool = false);
 };
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 inline static void qt_mac_get_fixed_pitch(QtFontFamily *f)
 {
     if(f && !f->fixedPitchComputed) {
@@ -1353,7 +1353,7 @@ unsigned int bestFoundry(int script, unsigned int score, int styleStrategy,
         }
 #else
         if (pitch != '*') {
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
             qt_mac_get_fixed_pitch(const_cast<QtFontFamily*>(family));
 #endif
             if ((pitch == 'm' && !family->fixedPitch)
@@ -1817,7 +1817,7 @@ bool QFontDatabase::isFixedPitch(const QString &family,
     QT_PREPEND_NAMESPACE(load)(familyName);
 
     QtFontFamily *f = d->family(familyName);
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
     qt_mac_get_fixed_pitch(f);
 #endif
     return (f && f->fixedPitch);
diff --git a/src/gui/text/qfontengine_coretext.mm b/src/gui/text/qfontengine_coretext.mm
index 204d685..cb8d278 100644
--- a/src/gui/text/qfontengine_coretext.mm
+++ b/src/gui/text/qfontengine_coretext.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include "qfontengine_coretext_p.h"
 
 #include <QtCore/qendian.h>
@@ -941,3 +943,4 @@ static void convertCGPathToQPainterPath(void *info, const CGPathElement *element
 
 #endif// !defined(Q_WS_MAC) || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
 
+#endif
diff --git a/src/gui/text/qfontengine_mac.mm b/src/gui/text/qfontengine_mac.mm
index ba01f4c..40ead95 100644
--- a/src/gui/text/qfontengine_mac.mm
+++ b/src/gui/text/qfontengine_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#if Q_SW_MAC
+
 #include "qfontengine_mac_p.h"
 
 #include <private/qapplication_p.h>
@@ -1227,3 +1229,4 @@ static void addGlyphsToPathHelper(ATSUStyle style, glyph_t *glyphs, QFixedPoint
 #endif // !QT_MAC_USE_COCOA
 
 QT_END_NAMESPACE
+#endif
diff --git a/src/gui/util/qsystemtrayicon_mac.mm b/src/gui/util/qsystemtrayicon_mac.mm
index 77631ae..5c52eef 100644
--- a/src/gui/util/qsystemtrayicon_mac.mm
+++ b/src/gui/util/qsystemtrayicon_mac.mm
@@ -73,6 +73,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #define QT_MAC_SYSTEMTRAY_USE_GROWL
 
 #include <private/qt_cocoa_helpers_mac_p.h>
@@ -624,3 +626,4 @@ -(void)selectedAction:(id)a {
 }
 @end
 
+#endif
diff --git a/src/gui/widgets/qdockwidget.cpp b/src/gui/widgets/qdockwidget.cpp
index 5912c8d..aad3602 100644
--- a/src/gui/widgets/qdockwidget.cpp
+++ b/src/gui/widgets/qdockwidget.cpp
@@ -951,7 +951,7 @@ void QDockWidgetPrivate::nonClientAreaMouseEvent(QMouseEvent *event)
             if (state->nca) {
                 endDrag();
             }
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             else { // workaround for lack of mouse-grab on Mac
                 QMainWindowLayout *layout = qt_mainwindow_layout(qobject_cast<QMainWindow *>(q->parentWidget()));
                 Q_ASSERT(layout != 0);
@@ -963,7 +963,7 @@ void QDockWidgetPrivate::nonClientAreaMouseEvent(QMouseEvent *event)
 #endif
             break;
         case QEvent::NonClientAreaMouseButtonRelease:
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                         if (state)
                                 endDrag();
 #endif
diff --git a/src/gui/widgets/qmaccocoaviewcontainer_mac.mm b/src/gui/widgets/qmaccocoaviewcontainer_mac.mm
index d028e2a..a113e45 100644
--- a/src/gui/widgets/qmaccocoaviewcontainer_mac.mm
+++ b/src/gui/widgets/qmaccocoaviewcontainer_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #import <Cocoa/Cocoa.h>
 #include <private/qwidget_p.h>
 #include "qmaccocoaviewcontainer_mac.h"
@@ -188,3 +190,5 @@ regard to its reference counting (retain/release) nature. It is noted in
 }
 
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/widgets/qmacnativewidget_mac.mm b/src/gui/widgets/qmacnativewidget_mac.mm
index 2ad7547..ad4095d 100644
--- a/src/gui/widgets/qmacnativewidget_mac.mm
+++ b/src/gui/widgets/qmacnativewidget_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #import <Cocoa/Cocoa.h>
 #import <private/qcocoaview_mac_p.h>
 #include "qmacnativewidget_mac.h"
@@ -131,3 +133,5 @@ QMacNativeWidget pretends it is a window (i.e. isWindow() will return true),
 }
 
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/widgets/qmainwindowlayout_mac.mm b/src/gui/widgets/qmainwindowlayout_mac.mm
index 5e66002..5b34d82 100644
--- a/src/gui/widgets/qmainwindowlayout_mac.mm
+++ b/src/gui/widgets/qmainwindowlayout_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include <private/qmainwindowlayout_p.h>
 #include <qtoolbar.h>
 #include <private/qtoolbarlayout_p.h>
@@ -606,3 +608,5 @@ static void GetToolbarAllowedItems(CFMutableArrayRef array)
 }
 
 QT_END_NAMESPACE
+
+#endif
diff --git a/src/gui/widgets/qmenu_mac.mm b/src/gui/widgets/qmenu_mac.mm
index 6a9cbc7..99fd3b0 100644
--- a/src/gui/widgets/qmenu_mac.mm
+++ b/src/gui/widgets/qmenu_mac.mm
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#ifdef Q_WS_MAC
+
 #include "qmenu.h"
 #include "qhash.h"
 #include <qdebug.h>
@@ -2223,3 +2225,4 @@ static OSMenuRef qt_mac_create_menu(QWidget *w)
 
 QT_END_NAMESPACE
 
+#endif
diff --git a/src/network/ssl/qsslsocket_openssl_symbols.cpp b/src/network/ssl/qsslsocket_openssl_symbols.cpp
index 3ee7106..2e2a49a 100644
--- a/src/network/ssl/qsslsocket_openssl_symbols.cpp
+++ b/src/network/ssl/qsslsocket_openssl_symbols.cpp
@@ -367,7 +367,7 @@ static int dlIterateCallback(struct dl_phdr_info *info, size_t size, void *data)
 static QStringList libraryPathList()
 {
     QStringList paths;
-#  ifdef Q_OS_DARWIN
+#  ifdef Q_WS_MAC
     paths = QString::fromLatin1(qgetenv("DYLD_LIBRARY_PATH"))
             .split(QLatin1Char(':'), QString::SkipEmptyParts);
 #  else
diff --git a/src/plugins/accessible/widgets/simplewidgets.cpp b/src/plugins/accessible/widgets/simplewidgets.cpp
index fe9c5e1..91c4a6c 100644
--- a/src/plugins/accessible/widgets/simplewidgets.cpp
+++ b/src/plugins/accessible/widgets/simplewidgets.cpp
@@ -57,7 +57,7 @@
 #include <qstyle.h>
 #include <qstyleoption.h>
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <qfocusframe.h>
 #endif
 
diff --git a/src/qt3support/other/q3polygonscanner.cpp b/src/qt3support/other/q3polygonscanner.cpp
index ab70f30..6b7b0cb 100644
--- a/src/qt3support/other/q3polygonscanner.cpp
+++ b/src/qt3support/other/q3polygonscanner.cpp
@@ -493,7 +493,7 @@ miInsertEdgeInET(EdgeTable *ET, EdgeTableEntry *ETE,
  */
 
 typedef struct {
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     int y, x;
 #else
     int x, y;
diff --git a/src/qt3support/text/q3textedit.cpp b/src/qt3support/text/q3textedit.cpp
index bf083c0..eb9f71a 100644
--- a/src/qt3support/text/q3textedit.cpp
+++ b/src/qt3support/text/q3textedit.cpp
@@ -1352,7 +1352,7 @@ void Q3TextEdit::keyPressEvent(QKeyEvent *e)
             unsigned char ascii = e->text().length() ? e->text().unicode()->latin1() : 0;
             if (e->text().length() &&
                 ((!(e->state() & Qt::ControlButton) &&
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
                   !(e->state() & Qt::AltButton) &&
 #endif
                   !(e->state() & Qt::MetaButton)) ||
@@ -2427,7 +2427,7 @@ void Q3TextEdit::contentsMouseDoubleClickEvent(QMouseEvent * e)
     {
         Q3TextCursor c1 = *cursor;
         Q3TextCursor c2 = *cursor;
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
         Q3TextParagraph *para = cursor->paragraph();
         if (cursor->isValid()) {
             if (para->at(cursor->index())->c.isLetterOrNumber()) {
@@ -4981,7 +4981,7 @@ void Q3TextEdit::pasteSubType(const QByteArray& subtype, QMimeSource *m)
 #if defined(Q_OS_WIN32)
         // Need to convert CRLF to LF
         t.replace(QLatin1String("\r\n"), QLatin1String("\n"));
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
         //need to convert CR to LF
         t.replace(QLatin1Char('\r'), QLatin1Char('\n'));
 #endif
diff --git a/src/tools/uic/cpp/cppwriteinitialization.cpp b/src/tools/uic/cpp/cppwriteinitialization.cpp
index b2bbaf1..c68ffc0 100644
--- a/src/tools/uic/cpp/cppwriteinitialization.cpp
+++ b/src/tools/uic/cpp/cppwriteinitialization.cpp
@@ -312,7 +312,7 @@ int IconHandle::compare(const IconHandle &rhs) const
 }
 
 
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
 inline uint qHash(const SizePolicyHandle &handle) { return qHash(handle.m_domSizePolicy); }
 inline uint qHash(const FontHandle &handle) { return qHash(handle.m_domFont); }
 inline uint qHash(const IconHandle &handle) { return qHash(handle.m_domIcon); }
@@ -421,7 +421,7 @@ void WriteInitialization::LayoutDefaultHandler::writeProperty(int p, const QStri
             bool ifndefMac = (!(m_state[p] & (HasDefaultFunction|HasDefaultValue))
                              && value == defaultStyleValue);
             if (ifndefMac)
-                str << "#ifndef Q_OS_MAC\n";
+                str << "#ifndef Q_WS_MAC\n";
             if (p == Margin) { // Use setContentsMargins for numeric values
                 writeContentsMargins(indent, objectName, value, str);
             } else {
diff --git a/src/tools/uic/cpp/cppwriteinitialization.h b/src/tools/uic/cpp/cppwriteinitialization.h
index 1a5c6e9..0901471 100644
--- a/src/tools/uic/cpp/cppwriteinitialization.h
+++ b/src/tools/uic/cpp/cppwriteinitialization.h
@@ -68,7 +68,7 @@ namespace CPP {
         int compare(const FontHandle &) const;
     private:
         const DomFont *m_domFont;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const FontHandle &);
 #endif
     };
@@ -82,7 +82,7 @@ namespace CPP {
         int compare(const IconHandle &) const;
     private:
         const DomResourceIcon *m_domIcon;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const IconHandle &);
 #endif
     };
@@ -96,12 +96,12 @@ namespace CPP {
         int compare(const SizePolicyHandle &) const;
     private:
         const DomSizePolicy *m_domSizePolicy;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const SizePolicyHandle &);
 #endif
     };
     inline bool operator ==(const SizePolicyHandle &f1, const SizePolicyHandle &f2) { return f1.compare(f2) == 0; }
-#if !(defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3))
+#if !(defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3))
     inline bool operator  <(const SizePolicyHandle &f1, const SizePolicyHandle &f2) { return f1.compare(f2) < 0; }
 #endif
 
@@ -309,7 +309,7 @@ private:
     ColorBrushHash m_colorBrushHash;
     // Map from font properties to  font variable name for reuse
     // Map from size policy to  variable for reuse
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
     typedef QHash<FontHandle, QString> FontPropertiesNameMap;
     typedef QHash<IconHandle, QString> IconPropertiesNameMap;
     typedef QHash<SizePolicyHandle, QString> SizePolicyNameMap;
diff --git a/src/tools/uic/qclass_lib_map.h b/src/tools/uic/qclass_lib_map.h
diff --git a/tools/assistant/lib/qhelpsearchresultwidget.cpp b/tools/assistant/lib/qhelpsearchresultwidget.cpp
index 20fe14a..3d86074 100644
--- a/tools/assistant/lib/qhelpsearchresultwidget.cpp
+++ b/tools/assistant/lib/qhelpsearchresultwidget.cpp
@@ -355,7 +355,7 @@ QHelpSearchResultWidget::QHelpSearchResultWidget(QHelpSearchEngine *engine)
 
 #if defined(QT_CLUCENE_SUPPORT)
     QHBoxLayout *hBoxLayout = new QHBoxLayout();
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
     hBoxLayout->setMargin(0);
     hBoxLayout->setSpacing(0);
 #endif
diff --git a/tools/assistant/tools/assistant/centralwidget.cpp b/tools/assistant/tools/assistant/centralwidget.cpp
index ff9b2e4..48417de 100644
--- a/tools/assistant/tools/assistant/centralwidget.cpp
+++ b/tools/assistant/tools/assistant/centralwidget.cpp
@@ -74,7 +74,7 @@ TabBar::TabBar(QWidget *parent)
     : QTabBar(parent)
 {
     TRACE_OBJ
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     setDocumentMode(true);
 #endif
     setMovable(true);
diff --git a/tools/assistant/tools/assistant/findwidget.cpp b/tools/assistant/tools/assistant/findwidget.cpp
index 09a6b5e..cda7ab6 100644
--- a/tools/assistant/tools/assistant/findwidget.cpp
+++ b/tools/assistant/tools/assistant/findwidget.cpp
@@ -61,7 +61,7 @@ FindWidget::FindWidget(QWidget *parent)
     QHBoxLayout *hboxLayout = new QHBoxLayout(this);
     QString resourcePath = QLatin1String(":/trolltech/assistant/images/");
 
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
     hboxLayout->setMargin(0);
     hboxLayout->setSpacing(6);
     resourcePath.append(QLatin1String("win"));
diff --git a/tools/assistant/tools/assistant/indexwindow.cpp b/tools/assistant/tools/assistant/indexwindow.cpp
index 744fd6f..3862c1f 100644
--- a/tools/assistant/tools/assistant/indexwindow.cpp
+++ b/tools/assistant/tools/assistant/indexwindow.cpp
@@ -164,7 +164,7 @@ bool IndexWindow::eventFilter(QObject *obj, QEvent *e)
             }
         }
     }
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     else if (obj == m_indexWidget && e->type() == QEvent::KeyPress) {
         QKeyEvent *ke = static_cast<QKeyEvent*>(e);
         if (ke->key() == Qt::Key_Return || ke->key() == Qt::Key_Enter)
diff --git a/tools/assistant/tools/assistant/mainwindow.cpp b/tools/assistant/tools/assistant/mainwindow.cpp
index bbf9b8e..eb32882 100644
--- a/tools/assistant/tools/assistant/mainwindow.cpp
+++ b/tools/assistant/tools/assistant/mainwindow.cpp
@@ -434,7 +434,7 @@ void MainWindow::setupActions()
 {
     TRACE_OBJ
     QString resourcePath = QLatin1String(":/trolltech/assistant/images/");
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     setUnifiedTitleAndToolBarOnMac(true);
     resourcePath.append(QLatin1String("mac"));
 #else
diff --git a/tools/designer/src/designer/assistantclient.cpp b/tools/designer/src/designer/assistantclient.cpp
index c6ae30e..919d727 100644
--- a/tools/designer/src/designer/assistantclient.cpp
+++ b/tools/designer/src/designer/assistantclient.cpp
@@ -113,7 +113,7 @@ bool AssistantClient::isRunning() const
 QString AssistantClient::binary()
 {
     QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
-#if !defined(Q_OS_MAC)
+#if !defined(Q_WS_MAC)
     app += QLatin1String("assistant");
 #else
     app += QLatin1String("Assistant.app/Contents/MacOS/Assistant");    
diff --git a/tools/designer/src/designer/qdesigner_actions.cpp b/tools/designer/src/designer/qdesigner_actions.cpp
index 3767c96..2a700e0 100644
--- a/tools/designer/src/designer/qdesigner_actions.cpp
+++ b/tools/designer/src/designer/qdesigner_actions.cpp
@@ -266,7 +266,7 @@ QDesignerActions::QDesignerActions(QDesignerWorkbench *workbench)
     connect(m_saveFormAsAction, SIGNAL(triggered()), this, SLOT(saveFormAs()));
     m_fileActions->addAction(m_saveFormAsAction);
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     m_saveAllFormsAction->setShortcut(tr("ALT+CTRL+S"));
 #else
     m_saveAllFormsAction->setShortcut(tr("CTRL+SHIFT+S")); // Commonly "Save As" on Mac
diff --git a/tools/designer/src/lib/uilib/abstractformbuilder.cpp b/tools/designer/src/lib/uilib/abstractformbuilder.cpp
index f135d0b..62f9c00 100644
--- a/tools/designer/src/lib/uilib/abstractformbuilder.cpp
+++ b/tools/designer/src/lib/uilib/abstractformbuilder.cpp
@@ -641,7 +641,7 @@ void QAbstractFormBuilder::layoutInfo(DomLayout *ui_layout, QObject *parent, int
     if (const DomProperty *p = properties.value(strings.spacingProperty, 0))
         spac = p->elementNumber();
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     // here we recognize UI file < 4.3 (no we don't store margin property)
     if (mar != INT_MIN) {
         const int defaultMargin = parent->inherits("QLayoutWidget") ? 0 : 9;
diff --git a/tools/qvfb/qlock.cpp b/tools/qvfb/qlock.cpp
index fb9f2b6..29b78f4 100644
--- a/tools/qvfb/qlock.cpp
+++ b/tools/qvfb/qlock.cpp
@@ -81,7 +81,7 @@ QT_END_NAMESPACE
 
 #else // QT_NO_QWS_MULTIPROCESS
 
-#if defined(Q_OS_DARWIN)
+#if defined(Q_WS_MAC)
 #  define QT_NO_SEMAPHORE
 #endif
 
diff --git a/mkspecs/darwin-g++/qmake.conf b/mkspecs/darwin-g++/qmake.conf
index 84dc764..2ed3064 100644
--- a/mkspecs/darwin-g++/qmake.conf
+++ b/mkspecs/darwin-g++/qmake.conf
@@ -5,13 +5,14 @@
 #
 
 MAKEFILE_GENERATOR	= UNIX
-TARGET_PLATFORM		= macx
+TARGET_PLATFORM		= unix
 TEMPLATE		= app
 CONFIG			+= qt warn_on release link_prl native_precompiled_headers
+CONFIG                  += lib_version_first
 QT			+= core gui
 DEFINES                 += __USE_WS_X11__
 
-QMAKE_CC		= cc
+QMAKE_CC               = clang -mmacosx-version-min=10.7
 QMAKE_LEX		= flex
 QMAKE_LEXFLAGS		=
 QMAKE_YACC		= yacc
@@ -32,7 +33,7 @@ QMAKE_CFLAGS_THREAD	=
 QMAKE_CFLAGS_PRECOMPILE	+= -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
 QMAKE_CFLAGS_USE_PRECOMPILE += -include ${QMAKE_PCH_OUTPUT_BASE}
 
-QMAKE_CXX		= c++
+QMAKE_CXX		= clang++ -mmacosx-version-min=10.7 -stdlib=libc++
 QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
 QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
 QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
@@ -47,24 +48,27 @@ QMAKE_CXXFLAGS_THREAD	=
 
 QMAKE_INCDIR		=
 QMAKE_LIBDIR		=
-QMAKE_INCDIR_X11	= /usr/X11R6/include
-QMAKE_LIBDIR_X11	= /usr/X11R6/lib
+QMAKE_INCDIR_X11	= /opt/X11/include
+QMAKE_LIBDIR_X11	= /opt/X11/lib
 QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
 QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
-QMAKE_INCDIR_OPENGL	= /usr/X11R6/include
-QMAKE_LIBDIR_OPENGL	= /usr/X11R6/lib
+QMAKE_INCDIR_OPENGL	= /opt/X11/include
+QMAKE_LIBDIR_OPENGL	= /opt/X11/lib
 
-QMAKE_LINK		= c++
-QMAKE_LINK_SHLIB	= c++
+QMAKE_LINK		= clang++
+QMAKE_LINK_SHLIB	= clang++
 QMAKE_LFLAGS		+= -headerpad_max_install_names
 QMAKE_LFLAGS		=
 QMAKE_LFLAGS_RELEASE	=
 QMAKE_LFLAGS_DEBUG	=
 QMAKE_LFLAGS_APP        = -prebind
+QMAKE_LFLAGS_APP += -Wl,-framework,CoreText -Wl,-framework,CoreGraphics -Wl,-framework,OpenGL -Wl,-framework,CoreFoundation -Wl,-framework,CoreServices
 QMAKE_LFLAGS_SHLIB	= -prebind -dynamiclib -single_module
+QMAKE_LFLAGS_SHLIB  += -Wl,-framework,CoreText -Wl,-framework,CoreGraphics -Wl,-framework,OpenGL -Wl,-framework,CoreFoundation -Wl,-framework,CoreServices
 QMAKE_LFLAGS_PLUGIN	= -prebind -bundle
+QMAKE_LFLAGS_PLUGIN += -Wl,-framework,CoreText -Wl,-framework,CoreGraphics -Wl,-framework,OpenGL -Wl,-framework,CoreFoundation -Wl,-framework,CoreServices
 QMAKE_LFLAGS_THREAD	=
-QMAKE_LFLAGS_SONAME	+= -install_name$${LITERAL_WHITESPACE}
+QMAKE_LFLAGS_SONAME	+= -install_name$${LITERAL_WHITESPACE}$$[QT_INSTALL_LIBS]/
 
 QMAKE_LFLAGS_VERSION    = -current_version$${LITERAL_WHITESPACE}
 QMAKE_LFLAGS_COMPAT_VERSION = -compatibility_version$${LITERAL_WHITESPACE}
diff --git a/src/corelib/io/qsettings_mac.cpp b/src/corelib/io/qsettings_mac.cpp
index 3504907..5fc683d 100644
--- a/src/corelib/io/qsettings_mac.cpp
+++ b/src/corelib/io/qsettings_mac.cpp
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#if 0
+
 #include "qsettings.h"
 #include "qsettings_p.h"
 #include "qdatetime.h"
@@ -734,3 +736,5 @@ bool QConfFileSettingsPrivate::writePlistFile(const QString &fileName,
 }
 
 QT_END_NAMESPACE
+
+#endif
