diff --git a/src/gui/text/qfont.cpp b/src/gui/text/qfont.cpp
index 2bc55f5..5b28842 100644
--- a/src/gui/text/qfont.cpp
+++ b/src/gui/text/qfont.cpp
@@ -39,6 +39,8 @@
 **
 ****************************************************************************/
 
+#include <iostream>
+
 #include "qfont.h"
 #include "qdebug.h"
 #include "qpaintdevice.h"
@@ -737,24 +739,34 @@ QFont::QFont(const QFont &font, QPaintDevice *pd)
     : resolve_mask(font.resolve_mask)
 {
     Q_ASSERT(pd != 0);
+    std::cout << __func__ << "():" << __LINE__ << std::endl;
     int dpi = pd->logicalDpiY();
+    std::cout << __func__ << "():" << __LINE__ << std::endl;
 #ifdef Q_WS_X11
     const QX11Info *info = qt_x11Info(pd);
+    std::cout << __func__ << "():" << __LINE__ << std::endl;
     int screen = info ? info->screen() : 0;
+    std::cout << __func__ << "():" << __LINE__ << std::endl;
 #else
     const int screen = 0;
 #endif
     if (font.d->dpi != dpi || font.d->screen != screen ) {
+    	std::cout << __func__ << "():" << __LINE__ << std::endl;
         d = new QFontPrivate(*font.d);
+        std::cout << __func__ << "():" << __LINE__ << std::endl;
         d->dpi = dpi;
+        std::cout << __func__ << "():" << __LINE__ << std::endl;
         d->screen = screen;
+        std::cout << __func__ << "():" << __LINE__ << std::endl;
     } else {
+    	std::cout << __func__ << "():" << __LINE__ << std::endl;
         d = font.d.data();
     }
 #ifdef Q_WS_WIN
     if (pd->devType() == QInternal::Printer && pd->getDC())
         d->hdc = pd->getDC();
 #endif
+    std::cout << __func__ << "():" << __LINE__ << std::endl;
 }
 
 /*!
